!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALAPI	/usr/include/AL/al.h	27;"	d	language:C++
ALAPIENTRY	/usr/include/AL/al.h	28;"	d	language:C++
ALCAPI	/usr/include/AL/alc.h	26;"	d	language:C++
ALCAPIENTRY	/usr/include/AL/alc.h	27;"	d	language:C++
ALC_5POINT1_SOFT	/usr/include/AL/alext.h	293;"	d	language:C++
ALC_6POINT1_SOFT	/usr/include/AL/alext.h	294;"	d	language:C++
ALC_7POINT1_SOFT	/usr/include/AL/alext.h	295;"	d	language:C++
ALC_ALL_ATTRIBUTES	/usr/include/AL/alc.h	126;"	d	language:C++
ALC_ALL_DEVICES_SPECIFIER	/usr/include/AL/alc.h	166;"	d	language:C++
ALC_API	/usr/include/AL/alc.h	10;"	d	language:C++
ALC_API	/usr/include/AL/alc.h	12;"	d	language:C++
ALC_API	/usr/include/AL/alc.h	14;"	d	language:C++
ALC_APIENTRY	/usr/include/AL/alc.h	19;"	d	language:C++
ALC_APIENTRY	/usr/include/AL/alc.h	21;"	d	language:C++
ALC_ATTRIBUTES_SIZE	/usr/include/AL/alc.h	125;"	d	language:C++
ALC_BYTE_SOFT	/usr/include/AL/alext.h	281;"	d	language:C++
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER	/usr/include/AL/alc.h	151;"	d	language:C++
ALC_CAPTURE_DEVICE_SPECIFIER	/usr/include/AL/alc.h	149;"	d	language:C++
ALC_CAPTURE_SAMPLES	/usr/include/AL/alc.h	153;"	d	language:C++
ALC_CHAN_CD_LOKI	/usr/include/AL/alext.h	95;"	d	language:C++
ALC_CHAN_MAIN_LOKI	/usr/include/AL/alext.h	93;"	d	language:C++
ALC_CHAN_PCM_LOKI	/usr/include/AL/alext.h	94;"	d	language:C++
ALC_CONNECTED	/usr/include/AL/alext.h	149;"	d	language:C++
ALC_DEFAULT_ALL_DEVICES_SPECIFIER	/usr/include/AL/alc.h	159;"	d	language:C++
ALC_DEFAULT_DEVICE_SPECIFIER	/usr/include/AL/alc.h	129;"	d	language:C++
ALC_DEVICE_SPECIFIER	/usr/include/AL/alc.h	136;"	d	language:C++
ALC_EFX_MAJOR_VERSION	/usr/include/AL/efx.h	14;"	d	language:C++
ALC_EFX_MINOR_VERSION	/usr/include/AL/efx.h	15;"	d	language:C++
ALC_ENUMERATE_ALL_EXT	/usr/include/AL/alc.h	157;"	d	language:C++
ALC_EXTENSIONS	/usr/include/AL/alc.h	138;"	d	language:C++
ALC_EXT_CAPTURE	/usr/include/AL/alc.h	142;"	d	language:C++
ALC_EXT_DEDICATED	/usr/include/AL/alext.h	200;"	d	language:C++
ALC_EXT_EFX	/usr/include/AL/alext.h	143;"	d	language:C++
ALC_EXT_EFX_NAME	/usr/include/AL/efx.h	12;"	d	language:C++
ALC_EXT_disconnect	/usr/include/AL/alext.h	148;"	d	language:C++
ALC_EXT_thread_local_context	/usr/include/AL/alext.h	153;"	d	language:C++
ALC_FALSE	/usr/include/AL/alc.h	81;"	d	language:C++
ALC_FLOAT_SOFT	/usr/include/AL/alext.h	287;"	d	language:C++
ALC_FORMAT_CHANNELS_SOFT	/usr/include/AL/alext.h	277;"	d	language:C++
ALC_FORMAT_TYPE_SOFT	/usr/include/AL/alext.h	278;"	d	language:C++
ALC_FREQUENCY	/usr/include/AL/alc.h	87;"	d	language:C++
ALC_INT_SOFT	/usr/include/AL/alext.h	285;"	d	language:C++
ALC_INVALID	/usr/include/AL/alc.h	28;"	d	language:C++
ALC_INVALID_CONTEXT	/usr/include/AL/alc.h	108;"	d	language:C++
ALC_INVALID_DEVICE	/usr/include/AL/alc.h	105;"	d	language:C++
ALC_INVALID_ENUM	/usr/include/AL/alc.h	111;"	d	language:C++
ALC_INVALID_VALUE	/usr/include/AL/alc.h	114;"	d	language:C++
ALC_LOKI_audio_channel	/usr/include/AL/alext.h	92;"	d	language:C++
ALC_MAJOR_VERSION	/usr/include/AL/alc.h	121;"	d	language:C++
ALC_MAX_AUXILIARY_SENDS	/usr/include/AL/efx.h	16;"	d	language:C++
ALC_MINOR_VERSION	/usr/include/AL/alc.h	122;"	d	language:C++
ALC_MONO_SOFT	/usr/include/AL/alext.h	290;"	d	language:C++
ALC_MONO_SOURCES	/usr/include/AL/alc.h	96;"	d	language:C++
ALC_NO_ERROR	/usr/include/AL/alc.h	102;"	d	language:C++
ALC_OUT_OF_MEMORY	/usr/include/AL/alc.h	117;"	d	language:C++
ALC_QUAD_SOFT	/usr/include/AL/alext.h	292;"	d	language:C++
ALC_REFRESH	/usr/include/AL/alc.h	90;"	d	language:C++
ALC_SHORT_SOFT	/usr/include/AL/alext.h	283;"	d	language:C++
ALC_SOFT_loopback	/usr/include/AL/alext.h	276;"	d	language:C++
ALC_STEREO_SOFT	/usr/include/AL/alext.h	291;"	d	language:C++
ALC_STEREO_SOURCES	/usr/include/AL/alc.h	99;"	d	language:C++
ALC_SYNC	/usr/include/AL/alc.h	93;"	d	language:C++
ALC_TRUE	/usr/include/AL/alc.h	84;"	d	language:C++
ALC_UNSIGNED_BYTE_SOFT	/usr/include/AL/alext.h	282;"	d	language:C++
ALC_UNSIGNED_INT_SOFT	/usr/include/AL/alext.h	286;"	d	language:C++
ALC_UNSIGNED_SHORT_SOFT	/usr/include/AL/alext.h	284;"	d	language:C++
ALC_VERSION_0_1	/usr/include/AL/alc.h	31;"	d	language:C++
ALCboolean	/usr/include/AL/alc.h	/^typedef char ALCboolean;$/;"	t	language:C++
ALCbyte	/usr/include/AL/alc.h	/^typedef signed char ALCbyte;$/;"	t	language:C++
ALCchar	/usr/include/AL/alc.h	/^typedef char ALCchar;$/;"	t	language:C++
ALCcontext	/usr/include/AL/alc.h	/^typedef struct ALCcontext_struct ALCcontext;$/;"	t	language:C++	typeref:struct:ALCcontext_struct
ALCdevice	/usr/include/AL/alc.h	/^typedef struct ALCdevice_struct ALCdevice;$/;"	t	language:C++	typeref:struct:ALCdevice_struct
ALCdouble	/usr/include/AL/alc.h	/^typedef double ALCdouble;$/;"	t	language:C++
ALCenum	/usr/include/AL/alc.h	/^typedef int ALCenum;$/;"	t	language:C++
ALCfloat	/usr/include/AL/alc.h	/^typedef float ALCfloat;$/;"	t	language:C++
ALCint	/usr/include/AL/alc.h	/^typedef int ALCint;$/;"	t	language:C++
ALCshort	/usr/include/AL/alc.h	/^typedef short ALCshort;$/;"	t	language:C++
ALCsizei	/usr/include/AL/alc.h	/^typedef int ALCsizei;$/;"	t	language:C++
ALCubyte	/usr/include/AL/alc.h	/^typedef unsigned char ALCubyte;$/;"	t	language:C++
ALCuint	/usr/include/AL/alc.h	/^typedef unsigned int ALCuint;$/;"	t	language:C++
ALCushort	/usr/include/AL/alc.h	/^typedef unsigned short ALCushort;$/;"	t	language:C++
ALCvoid	/usr/include/AL/alc.h	/^typedef void ALCvoid;$/;"	t	language:C++
ALUT_API	/usr/include/AL/alut.h	21;"	d	language:C++
ALUT_API	/usr/include/AL/alut.h	23;"	d	language:C++
ALUT_API	/usr/include/AL/alut.h	27;"	d	language:C++
ALUT_API	/usr/include/AL/alut.h	29;"	d	language:C++
ALUT_APIENTRY	/usr/include/AL/alut.h	34;"	d	language:C++
ALUT_APIENTRY	/usr/include/AL/alut.h	36;"	d	language:C++
ALUT_API_MAJOR_VERSION	/usr/include/AL/alut.h	52;"	d	language:C++
ALUT_API_MINOR_VERSION	/usr/include/AL/alut.h	53;"	d	language:C++
ALUT_ATTRIBUTE_DEPRECATED	/usr/include/AL/alut.h	45;"	d	language:C++
ALUT_ATTRIBUTE_DEPRECATED	/usr/include/AL/alut.h	47;"	d	language:C++
ALUT_ATTRIBUTE_DEPRECATED	/usr/include/AL/alut.h	49;"	d	language:C++
ALUT_ERROR_ALC_ERROR_ON_ENTRY	/usr/include/AL/alut.h	62;"	d	language:C++
ALUT_ERROR_AL_ERROR_ON_ENTRY	/usr/include/AL/alut.h	61;"	d	language:C++
ALUT_ERROR_BUFFER_DATA	/usr/include/AL/alut.h	69;"	d	language:C++
ALUT_ERROR_CLOSE_DEVICE	/usr/include/AL/alut.h	64;"	d	language:C++
ALUT_ERROR_CORRUPT_OR_TRUNCATED_DATA	/usr/include/AL/alut.h	73;"	d	language:C++
ALUT_ERROR_CREATE_CONTEXT	/usr/include/AL/alut.h	65;"	d	language:C++
ALUT_ERROR_DESTROY_CONTEXT	/usr/include/AL/alut.h	67;"	d	language:C++
ALUT_ERROR_GEN_BUFFERS	/usr/include/AL/alut.h	68;"	d	language:C++
ALUT_ERROR_INVALID_ENUM	/usr/include/AL/alut.h	57;"	d	language:C++
ALUT_ERROR_INVALID_OPERATION	/usr/include/AL/alut.h	59;"	d	language:C++
ALUT_ERROR_INVALID_VALUE	/usr/include/AL/alut.h	58;"	d	language:C++
ALUT_ERROR_IO_ERROR	/usr/include/AL/alut.h	70;"	d	language:C++
ALUT_ERROR_MAKE_CONTEXT_CURRENT	/usr/include/AL/alut.h	66;"	d	language:C++
ALUT_ERROR_NO_CURRENT_CONTEXT	/usr/include/AL/alut.h	60;"	d	language:C++
ALUT_ERROR_NO_ERROR	/usr/include/AL/alut.h	55;"	d	language:C++
ALUT_ERROR_OPEN_DEVICE	/usr/include/AL/alut.h	63;"	d	language:C++
ALUT_ERROR_OUT_OF_MEMORY	/usr/include/AL/alut.h	56;"	d	language:C++
ALUT_ERROR_UNSUPPORTED_FILE_SUBTYPE	/usr/include/AL/alut.h	72;"	d	language:C++
ALUT_ERROR_UNSUPPORTED_FILE_TYPE	/usr/include/AL/alut.h	71;"	d	language:C++
ALUT_LOADER_BUFFER	/usr/include/AL/alut.h	81;"	d	language:C++
ALUT_LOADER_MEMORY	/usr/include/AL/alut.h	82;"	d	language:C++
ALUT_WAVEFORM_IMPULSE	/usr/include/AL/alut.h	79;"	d	language:C++
ALUT_WAVEFORM_SAWTOOTH	/usr/include/AL/alut.h	77;"	d	language:C++
ALUT_WAVEFORM_SINE	/usr/include/AL/alut.h	75;"	d	language:C++
ALUT_WAVEFORM_SQUARE	/usr/include/AL/alut.h	76;"	d	language:C++
ALUT_WAVEFORM_WHITENOISE	/usr/include/AL/alut.h	78;"	d	language:C++
AL_5POINT1_16_SOFT	/usr/include/AL/alext.h	243;"	d	language:C++
AL_5POINT1_32F_SOFT	/usr/include/AL/alext.h	244;"	d	language:C++
AL_5POINT1_8_SOFT	/usr/include/AL/alext.h	242;"	d	language:C++
AL_5POINT1_SOFT	/usr/include/AL/alext.h	213;"	d	language:C++
AL_6POINT1_16_SOFT	/usr/include/AL/alext.h	246;"	d	language:C++
AL_6POINT1_32F_SOFT	/usr/include/AL/alext.h	247;"	d	language:C++
AL_6POINT1_8_SOFT	/usr/include/AL/alext.h	245;"	d	language:C++
AL_6POINT1_SOFT	/usr/include/AL/alext.h	214;"	d	language:C++
AL_7POINT1_16_SOFT	/usr/include/AL/alext.h	249;"	d	language:C++
AL_7POINT1_32F_SOFT	/usr/include/AL/alext.h	250;"	d	language:C++
AL_7POINT1_8_SOFT	/usr/include/AL/alext.h	248;"	d	language:C++
AL_7POINT1_SOFT	/usr/include/AL/alext.h	215;"	d	language:C++
AL_AIR_ABSORPTION_FACTOR	/usr/include/AL/efx.h	25;"	d	language:C++
AL_ALC_H	/usr/include/AL/alc.h	2;"	d	language:C++
AL_ALEXT_H	/usr/include/AL/alext.h	22;"	d	language:C++
AL_ALUT_H	/usr/include/AL/alut.h	2;"	d	language:C++
AL_AL_H	/usr/include/AL/al.h	2;"	d	language:C++
AL_API	/usr/include/AL/al.h	10;"	d	language:C++
AL_API	/usr/include/AL/al.h	12;"	d	language:C++
AL_API	/usr/include/AL/al.h	14;"	d	language:C++
AL_APIENTRY	/usr/include/AL/al.h	19;"	d	language:C++
AL_APIENTRY	/usr/include/AL/al.h	21;"	d	language:C++
AL_AUTOWAH_ATTACK_TIME	/usr/include/AL/efx.h	128;"	d	language:C++
AL_AUTOWAH_DEFAULT_ATTACK_TIME	/usr/include/AL/efx.h	664;"	d	language:C++
AL_AUTOWAH_DEFAULT_PEAK_GAIN	/usr/include/AL/efx.h	676;"	d	language:C++
AL_AUTOWAH_DEFAULT_RELEASE_TIME	/usr/include/AL/efx.h	668;"	d	language:C++
AL_AUTOWAH_DEFAULT_RESONANCE	/usr/include/AL/efx.h	672;"	d	language:C++
AL_AUTOWAH_MAX_ATTACK_TIME	/usr/include/AL/efx.h	663;"	d	language:C++
AL_AUTOWAH_MAX_PEAK_GAIN	/usr/include/AL/efx.h	675;"	d	language:C++
AL_AUTOWAH_MAX_RELEASE_TIME	/usr/include/AL/efx.h	667;"	d	language:C++
AL_AUTOWAH_MAX_RESONANCE	/usr/include/AL/efx.h	671;"	d	language:C++
AL_AUTOWAH_MIN_ATTACK_TIME	/usr/include/AL/efx.h	662;"	d	language:C++
AL_AUTOWAH_MIN_PEAK_GAIN	/usr/include/AL/efx.h	674;"	d	language:C++
AL_AUTOWAH_MIN_RELEASE_TIME	/usr/include/AL/efx.h	666;"	d	language:C++
AL_AUTOWAH_MIN_RESONANCE	/usr/include/AL/efx.h	670;"	d	language:C++
AL_AUTOWAH_PEAK_GAIN	/usr/include/AL/efx.h	131;"	d	language:C++
AL_AUTOWAH_RELEASE_TIME	/usr/include/AL/efx.h	129;"	d	language:C++
AL_AUTOWAH_RESONANCE	/usr/include/AL/efx.h	130;"	d	language:C++
AL_AUXILIARY_SEND_FILTER	/usr/include/AL/efx.h	24;"	d	language:C++
AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	30;"	d	language:C++
AL_AUXILIARY_SEND_FILTER_GAIN_AUTO	/usr/include/AL/efx.h	29;"	d	language:C++
AL_BANDPASS_DEFAULT_GAIN	/usr/include/AL/efx.h	305;"	d	language:C++
AL_BANDPASS_DEFAULT_GAINHF	/usr/include/AL/efx.h	309;"	d	language:C++
AL_BANDPASS_DEFAULT_GAINLF	/usr/include/AL/efx.h	313;"	d	language:C++
AL_BANDPASS_GAIN	/usr/include/AL/efx.h	189;"	d	language:C++
AL_BANDPASS_GAINHF	/usr/include/AL/efx.h	191;"	d	language:C++
AL_BANDPASS_GAINLF	/usr/include/AL/efx.h	190;"	d	language:C++
AL_BANDPASS_MAX_GAIN	/usr/include/AL/efx.h	304;"	d	language:C++
AL_BANDPASS_MAX_GAINHF	/usr/include/AL/efx.h	308;"	d	language:C++
AL_BANDPASS_MAX_GAINLF	/usr/include/AL/efx.h	312;"	d	language:C++
AL_BANDPASS_MIN_GAIN	/usr/include/AL/efx.h	303;"	d	language:C++
AL_BANDPASS_MIN_GAINHF	/usr/include/AL/efx.h	307;"	d	language:C++
AL_BANDPASS_MIN_GAINLF	/usr/include/AL/efx.h	311;"	d	language:C++
AL_BITS	/usr/include/AL/al.h	347;"	d	language:C++
AL_BUFFER	/usr/include/AL/al.h	182;"	d	language:C++
AL_BUFFERS_PROCESSED	/usr/include/AL/al.h	262;"	d	language:C++
AL_BUFFERS_QUEUED	/usr/include/AL/al.h	250;"	d	language:C++
AL_BYTE3_SOFT	/usr/include/AL/alext.h	226;"	d	language:C++
AL_BYTE_LENGTH_SOFT	/usr/include/AL/alext.h	254;"	d	language:C++
AL_BYTE_OFFSET	/usr/include/AL/al.h	316;"	d	language:C++
AL_BYTE_RW_OFFSETS_SOFT	/usr/include/AL/alext.h	169;"	d	language:C++
AL_BYTE_SOFT	/usr/include/AL/alext.h	218;"	d	language:C++
AL_CHANNELS	/usr/include/AL/al.h	349;"	d	language:C++
AL_CHORUS_DEFAULT_DELAY	/usr/include/AL/efx.h	486;"	d	language:C++
AL_CHORUS_DEFAULT_DEPTH	/usr/include/AL/efx.h	478;"	d	language:C++
AL_CHORUS_DEFAULT_FEEDBACK	/usr/include/AL/efx.h	482;"	d	language:C++
AL_CHORUS_DEFAULT_PHASE	/usr/include/AL/efx.h	470;"	d	language:C++
AL_CHORUS_DEFAULT_RATE	/usr/include/AL/efx.h	474;"	d	language:C++
AL_CHORUS_DEFAULT_WAVEFORM	/usr/include/AL/efx.h	466;"	d	language:C++
AL_CHORUS_DELAY	/usr/include/AL/efx.h	81;"	d	language:C++
AL_CHORUS_DEPTH	/usr/include/AL/efx.h	79;"	d	language:C++
AL_CHORUS_FEEDBACK	/usr/include/AL/efx.h	80;"	d	language:C++
AL_CHORUS_MAX_DELAY	/usr/include/AL/efx.h	485;"	d	language:C++
AL_CHORUS_MAX_DEPTH	/usr/include/AL/efx.h	477;"	d	language:C++
AL_CHORUS_MAX_FEEDBACK	/usr/include/AL/efx.h	481;"	d	language:C++
AL_CHORUS_MAX_PHASE	/usr/include/AL/efx.h	469;"	d	language:C++
AL_CHORUS_MAX_RATE	/usr/include/AL/efx.h	473;"	d	language:C++
AL_CHORUS_MAX_WAVEFORM	/usr/include/AL/efx.h	465;"	d	language:C++
AL_CHORUS_MIN_DELAY	/usr/include/AL/efx.h	484;"	d	language:C++
AL_CHORUS_MIN_DEPTH	/usr/include/AL/efx.h	476;"	d	language:C++
AL_CHORUS_MIN_FEEDBACK	/usr/include/AL/efx.h	480;"	d	language:C++
AL_CHORUS_MIN_PHASE	/usr/include/AL/efx.h	468;"	d	language:C++
AL_CHORUS_MIN_RATE	/usr/include/AL/efx.h	472;"	d	language:C++
AL_CHORUS_MIN_WAVEFORM	/usr/include/AL/efx.h	464;"	d	language:C++
AL_CHORUS_PHASE	/usr/include/AL/efx.h	77;"	d	language:C++
AL_CHORUS_RATE	/usr/include/AL/efx.h	78;"	d	language:C++
AL_CHORUS_WAVEFORM	/usr/include/AL/efx.h	76;"	d	language:C++
AL_CHORUS_WAVEFORM_SINUSOID	/usr/include/AL/efx.h	461;"	d	language:C++
AL_CHORUS_WAVEFORM_TRIANGLE	/usr/include/AL/efx.h	462;"	d	language:C++
AL_COMPRESSOR_DEFAULT_ONOFF	/usr/include/AL/efx.h	681;"	d	language:C++
AL_COMPRESSOR_MAX_ONOFF	/usr/include/AL/efx.h	680;"	d	language:C++
AL_COMPRESSOR_MIN_ONOFF	/usr/include/AL/efx.h	679;"	d	language:C++
AL_COMPRESSOR_ONOFF	/usr/include/AL/efx.h	134;"	d	language:C++
AL_CONE_INNER_ANGLE	/usr/include/AL/al.h	108;"	d	language:C++
AL_CONE_OUTER_ANGLE	/usr/include/AL/al.h	118;"	d	language:C++
AL_CONE_OUTER_GAIN	/usr/include/AL/al.h	297;"	d	language:C++
AL_CONE_OUTER_GAINHF	/usr/include/AL/efx.h	27;"	d	language:C++
AL_DEDICATED_GAIN	/usr/include/AL/alext.h	201;"	d	language:C++
AL_DEFAULT_AIR_ABSORPTION_FACTOR	/usr/include/AL/efx.h	728;"	d	language:C++
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	748;"	d	language:C++
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO	/usr/include/AL/efx.h	744;"	d	language:C++
AL_DEFAULT_CONE_OUTER_GAINHF	/usr/include/AL/efx.h	736;"	d	language:C++
AL_DEFAULT_DIRECT_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	740;"	d	language:C++
AL_DEFAULT_METERS_PER_UNIT	/usr/include/AL/efx.h	754;"	d	language:C++
AL_DEFAULT_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	732;"	d	language:C++
AL_DIRECTION	/usr/include/AL/al.h	154;"	d	language:C++
AL_DIRECT_CHANNELS_SOFT	/usr/include/AL/alext.h	272;"	d	language:C++
AL_DIRECT_FILTER	/usr/include/AL/efx.h	23;"	d	language:C++
AL_DIRECT_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	28;"	d	language:C++
AL_DISTANCE_MODEL	/usr/include/AL/al.h	441;"	d	language:C++
AL_DISTORTION_DEFAULT_EDGE	/usr/include/AL/efx.h	491;"	d	language:C++
AL_DISTORTION_DEFAULT_EQBANDWIDTH	/usr/include/AL/efx.h	507;"	d	language:C++
AL_DISTORTION_DEFAULT_EQCENTER	/usr/include/AL/efx.h	503;"	d	language:C++
AL_DISTORTION_DEFAULT_GAIN	/usr/include/AL/efx.h	495;"	d	language:C++
AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF	/usr/include/AL/efx.h	499;"	d	language:C++
AL_DISTORTION_EDGE	/usr/include/AL/efx.h	84;"	d	language:C++
AL_DISTORTION_EQBANDWIDTH	/usr/include/AL/efx.h	88;"	d	language:C++
AL_DISTORTION_EQCENTER	/usr/include/AL/efx.h	87;"	d	language:C++
AL_DISTORTION_GAIN	/usr/include/AL/efx.h	85;"	d	language:C++
AL_DISTORTION_LOWPASS_CUTOFF	/usr/include/AL/efx.h	86;"	d	language:C++
AL_DISTORTION_MAX_EDGE	/usr/include/AL/efx.h	490;"	d	language:C++
AL_DISTORTION_MAX_EQBANDWIDTH	/usr/include/AL/efx.h	506;"	d	language:C++
AL_DISTORTION_MAX_EQCENTER	/usr/include/AL/efx.h	502;"	d	language:C++
AL_DISTORTION_MAX_GAIN	/usr/include/AL/efx.h	494;"	d	language:C++
AL_DISTORTION_MAX_LOWPASS_CUTOFF	/usr/include/AL/efx.h	498;"	d	language:C++
AL_DISTORTION_MIN_EDGE	/usr/include/AL/efx.h	489;"	d	language:C++
AL_DISTORTION_MIN_EQBANDWIDTH	/usr/include/AL/efx.h	505;"	d	language:C++
AL_DISTORTION_MIN_EQCENTER	/usr/include/AL/efx.h	501;"	d	language:C++
AL_DISTORTION_MIN_GAIN	/usr/include/AL/efx.h	493;"	d	language:C++
AL_DISTORTION_MIN_LOWPASS_CUTOFF	/usr/include/AL/efx.h	497;"	d	language:C++
AL_DOPPLER_FACTOR	/usr/include/AL/al.h	400;"	d	language:C++
AL_DOPPLER_VELOCITY	/usr/include/AL/al.h	408;"	d	language:C++
AL_DOUBLE_SOFT	/usr/include/AL/alext.h	225;"	d	language:C++
AL_EAXREVERB_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	69;"	d	language:C++
AL_EAXREVERB_DECAY_HFLIMIT	/usr/include/AL/efx.h	73;"	d	language:C++
AL_EAXREVERB_DECAY_HFRATIO	/usr/include/AL/efx.h	57;"	d	language:C++
AL_EAXREVERB_DECAY_LFRATIO	/usr/include/AL/efx.h	58;"	d	language:C++
AL_EAXREVERB_DECAY_TIME	/usr/include/AL/efx.h	56;"	d	language:C++
AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	442;"	d	language:C++
AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT	/usr/include/AL/efx.h	458;"	d	language:C++
AL_EAXREVERB_DEFAULT_DECAY_HFRATIO	/usr/include/AL/efx.h	398;"	d	language:C++
AL_EAXREVERB_DEFAULT_DECAY_LFRATIO	/usr/include/AL/efx.h	402;"	d	language:C++
AL_EAXREVERB_DEFAULT_DECAY_TIME	/usr/include/AL/efx.h	394;"	d	language:C++
AL_EAXREVERB_DEFAULT_DENSITY	/usr/include/AL/efx.h	374;"	d	language:C++
AL_EAXREVERB_DEFAULT_DIFFUSION	/usr/include/AL/efx.h	378;"	d	language:C++
AL_EAXREVERB_DEFAULT_ECHO_DEPTH	/usr/include/AL/efx.h	430;"	d	language:C++
AL_EAXREVERB_DEFAULT_ECHO_TIME	/usr/include/AL/efx.h	426;"	d	language:C++
AL_EAXREVERB_DEFAULT_GAIN	/usr/include/AL/efx.h	382;"	d	language:C++
AL_EAXREVERB_DEFAULT_GAINHF	/usr/include/AL/efx.h	386;"	d	language:C++
AL_EAXREVERB_DEFAULT_GAINLF	/usr/include/AL/efx.h	390;"	d	language:C++
AL_EAXREVERB_DEFAULT_HFREFERENCE	/usr/include/AL/efx.h	446;"	d	language:C++
AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY	/usr/include/AL/efx.h	420;"	d	language:C++
AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN	/usr/include/AL/efx.h	416;"	d	language:C++
AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN_XYZ	/usr/include/AL/efx.h	422;"	d	language:C++
AL_EAXREVERB_DEFAULT_LFREFERENCE	/usr/include/AL/efx.h	450;"	d	language:C++
AL_EAXREVERB_DEFAULT_MODULATION_DEPTH	/usr/include/AL/efx.h	438;"	d	language:C++
AL_EAXREVERB_DEFAULT_MODULATION_TIME	/usr/include/AL/efx.h	434;"	d	language:C++
AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY	/usr/include/AL/efx.h	410;"	d	language:C++
AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN	/usr/include/AL/efx.h	406;"	d	language:C++
AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN_XYZ	/usr/include/AL/efx.h	412;"	d	language:C++
AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	454;"	d	language:C++
AL_EAXREVERB_DENSITY	/usr/include/AL/efx.h	51;"	d	language:C++
AL_EAXREVERB_DIFFUSION	/usr/include/AL/efx.h	52;"	d	language:C++
AL_EAXREVERB_ECHO_DEPTH	/usr/include/AL/efx.h	66;"	d	language:C++
AL_EAXREVERB_ECHO_TIME	/usr/include/AL/efx.h	65;"	d	language:C++
AL_EAXREVERB_GAIN	/usr/include/AL/efx.h	53;"	d	language:C++
AL_EAXREVERB_GAINHF	/usr/include/AL/efx.h	54;"	d	language:C++
AL_EAXREVERB_GAINLF	/usr/include/AL/efx.h	55;"	d	language:C++
AL_EAXREVERB_HFREFERENCE	/usr/include/AL/efx.h	70;"	d	language:C++
AL_EAXREVERB_LATE_REVERB_DELAY	/usr/include/AL/efx.h	63;"	d	language:C++
AL_EAXREVERB_LATE_REVERB_GAIN	/usr/include/AL/efx.h	62;"	d	language:C++
AL_EAXREVERB_LATE_REVERB_PAN	/usr/include/AL/efx.h	64;"	d	language:C++
AL_EAXREVERB_LFREFERENCE	/usr/include/AL/efx.h	71;"	d	language:C++
AL_EAXREVERB_MAX_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	441;"	d	language:C++
AL_EAXREVERB_MAX_DECAY_HFLIMIT	/usr/include/AL/efx.h	457;"	d	language:C++
AL_EAXREVERB_MAX_DECAY_HFRATIO	/usr/include/AL/efx.h	397;"	d	language:C++
AL_EAXREVERB_MAX_DECAY_LFRATIO	/usr/include/AL/efx.h	401;"	d	language:C++
AL_EAXREVERB_MAX_DECAY_TIME	/usr/include/AL/efx.h	393;"	d	language:C++
AL_EAXREVERB_MAX_DENSITY	/usr/include/AL/efx.h	373;"	d	language:C++
AL_EAXREVERB_MAX_DIFFUSION	/usr/include/AL/efx.h	377;"	d	language:C++
AL_EAXREVERB_MAX_ECHO_DEPTH	/usr/include/AL/efx.h	429;"	d	language:C++
AL_EAXREVERB_MAX_ECHO_TIME	/usr/include/AL/efx.h	425;"	d	language:C++
AL_EAXREVERB_MAX_GAIN	/usr/include/AL/efx.h	381;"	d	language:C++
AL_EAXREVERB_MAX_GAINHF	/usr/include/AL/efx.h	385;"	d	language:C++
AL_EAXREVERB_MAX_GAINLF	/usr/include/AL/efx.h	389;"	d	language:C++
AL_EAXREVERB_MAX_HFREFERENCE	/usr/include/AL/efx.h	445;"	d	language:C++
AL_EAXREVERB_MAX_LATE_REVERB_DELAY	/usr/include/AL/efx.h	419;"	d	language:C++
AL_EAXREVERB_MAX_LATE_REVERB_GAIN	/usr/include/AL/efx.h	415;"	d	language:C++
AL_EAXREVERB_MAX_LFREFERENCE	/usr/include/AL/efx.h	449;"	d	language:C++
AL_EAXREVERB_MAX_MODULATION_DEPTH	/usr/include/AL/efx.h	437;"	d	language:C++
AL_EAXREVERB_MAX_MODULATION_TIME	/usr/include/AL/efx.h	433;"	d	language:C++
AL_EAXREVERB_MAX_REFLECTIONS_DELAY	/usr/include/AL/efx.h	409;"	d	language:C++
AL_EAXREVERB_MAX_REFLECTIONS_GAIN	/usr/include/AL/efx.h	405;"	d	language:C++
AL_EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	453;"	d	language:C++
AL_EAXREVERB_MIN_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	440;"	d	language:C++
AL_EAXREVERB_MIN_DECAY_HFLIMIT	/usr/include/AL/efx.h	456;"	d	language:C++
AL_EAXREVERB_MIN_DECAY_HFRATIO	/usr/include/AL/efx.h	396;"	d	language:C++
AL_EAXREVERB_MIN_DECAY_LFRATIO	/usr/include/AL/efx.h	400;"	d	language:C++
AL_EAXREVERB_MIN_DECAY_TIME	/usr/include/AL/efx.h	392;"	d	language:C++
AL_EAXREVERB_MIN_DENSITY	/usr/include/AL/efx.h	372;"	d	language:C++
AL_EAXREVERB_MIN_DIFFUSION	/usr/include/AL/efx.h	376;"	d	language:C++
AL_EAXREVERB_MIN_ECHO_DEPTH	/usr/include/AL/efx.h	428;"	d	language:C++
AL_EAXREVERB_MIN_ECHO_TIME	/usr/include/AL/efx.h	424;"	d	language:C++
AL_EAXREVERB_MIN_GAIN	/usr/include/AL/efx.h	380;"	d	language:C++
AL_EAXREVERB_MIN_GAINHF	/usr/include/AL/efx.h	384;"	d	language:C++
AL_EAXREVERB_MIN_GAINLF	/usr/include/AL/efx.h	388;"	d	language:C++
AL_EAXREVERB_MIN_HFREFERENCE	/usr/include/AL/efx.h	444;"	d	language:C++
AL_EAXREVERB_MIN_LATE_REVERB_DELAY	/usr/include/AL/efx.h	418;"	d	language:C++
AL_EAXREVERB_MIN_LATE_REVERB_GAIN	/usr/include/AL/efx.h	414;"	d	language:C++
AL_EAXREVERB_MIN_LFREFERENCE	/usr/include/AL/efx.h	448;"	d	language:C++
AL_EAXREVERB_MIN_MODULATION_DEPTH	/usr/include/AL/efx.h	436;"	d	language:C++
AL_EAXREVERB_MIN_MODULATION_TIME	/usr/include/AL/efx.h	432;"	d	language:C++
AL_EAXREVERB_MIN_REFLECTIONS_DELAY	/usr/include/AL/efx.h	408;"	d	language:C++
AL_EAXREVERB_MIN_REFLECTIONS_GAIN	/usr/include/AL/efx.h	404;"	d	language:C++
AL_EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	452;"	d	language:C++
AL_EAXREVERB_MODULATION_DEPTH	/usr/include/AL/efx.h	68;"	d	language:C++
AL_EAXREVERB_MODULATION_TIME	/usr/include/AL/efx.h	67;"	d	language:C++
AL_EAXREVERB_REFLECTIONS_DELAY	/usr/include/AL/efx.h	60;"	d	language:C++
AL_EAXREVERB_REFLECTIONS_GAIN	/usr/include/AL/efx.h	59;"	d	language:C++
AL_EAXREVERB_REFLECTIONS_PAN	/usr/include/AL/efx.h	61;"	d	language:C++
AL_EAXREVERB_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	72;"	d	language:C++
AL_ECHO_DAMPING	/usr/include/AL/efx.h	93;"	d	language:C++
AL_ECHO_DEFAULT_DAMPING	/usr/include/AL/efx.h	520;"	d	language:C++
AL_ECHO_DEFAULT_DELAY	/usr/include/AL/efx.h	512;"	d	language:C++
AL_ECHO_DEFAULT_FEEDBACK	/usr/include/AL/efx.h	524;"	d	language:C++
AL_ECHO_DEFAULT_LRDELAY	/usr/include/AL/efx.h	516;"	d	language:C++
AL_ECHO_DEFAULT_SPREAD	/usr/include/AL/efx.h	528;"	d	language:C++
AL_ECHO_DELAY	/usr/include/AL/efx.h	91;"	d	language:C++
AL_ECHO_FEEDBACK	/usr/include/AL/efx.h	94;"	d	language:C++
AL_ECHO_LRDELAY	/usr/include/AL/efx.h	92;"	d	language:C++
AL_ECHO_MAX_DAMPING	/usr/include/AL/efx.h	519;"	d	language:C++
AL_ECHO_MAX_DELAY	/usr/include/AL/efx.h	511;"	d	language:C++
AL_ECHO_MAX_FEEDBACK	/usr/include/AL/efx.h	523;"	d	language:C++
AL_ECHO_MAX_LRDELAY	/usr/include/AL/efx.h	515;"	d	language:C++
AL_ECHO_MAX_SPREAD	/usr/include/AL/efx.h	527;"	d	language:C++
AL_ECHO_MIN_DAMPING	/usr/include/AL/efx.h	518;"	d	language:C++
AL_ECHO_MIN_DELAY	/usr/include/AL/efx.h	510;"	d	language:C++
AL_ECHO_MIN_FEEDBACK	/usr/include/AL/efx.h	522;"	d	language:C++
AL_ECHO_MIN_LRDELAY	/usr/include/AL/efx.h	514;"	d	language:C++
AL_ECHO_MIN_SPREAD	/usr/include/AL/efx.h	526;"	d	language:C++
AL_ECHO_SPREAD	/usr/include/AL/efx.h	95;"	d	language:C++
AL_EFFECTSLOT_AUXILIARY_SEND_AUTO	/usr/include/AL/efx.h	172;"	d	language:C++
AL_EFFECTSLOT_EFFECT	/usr/include/AL/efx.h	170;"	d	language:C++
AL_EFFECTSLOT_GAIN	/usr/include/AL/efx.h	171;"	d	language:C++
AL_EFFECTSLOT_NULL	/usr/include/AL/efx.h	175;"	d	language:C++
AL_EFFECT_AUTOWAH	/usr/include/AL/efx.h	164;"	d	language:C++
AL_EFFECT_CHORUS	/usr/include/AL/efx.h	156;"	d	language:C++
AL_EFFECT_COMPRESSOR	/usr/include/AL/efx.h	165;"	d	language:C++
AL_EFFECT_DEDICATED_DIALOGUE	/usr/include/AL/alext.h	202;"	d	language:C++
AL_EFFECT_DEDICATED_LOW_FREQUENCY_EFFECT	/usr/include/AL/alext.h	203;"	d	language:C++
AL_EFFECT_DISTORTION	/usr/include/AL/efx.h	157;"	d	language:C++
AL_EFFECT_EAXREVERB	/usr/include/AL/efx.h	167;"	d	language:C++
AL_EFFECT_ECHO	/usr/include/AL/efx.h	158;"	d	language:C++
AL_EFFECT_EQUALIZER	/usr/include/AL/efx.h	166;"	d	language:C++
AL_EFFECT_FIRST_PARAMETER	/usr/include/AL/efx.h	149;"	d	language:C++
AL_EFFECT_FLANGER	/usr/include/AL/efx.h	159;"	d	language:C++
AL_EFFECT_FREQUENCY_SHIFTER	/usr/include/AL/efx.h	160;"	d	language:C++
AL_EFFECT_LAST_PARAMETER	/usr/include/AL/efx.h	150;"	d	language:C++
AL_EFFECT_NULL	/usr/include/AL/efx.h	154;"	d	language:C++
AL_EFFECT_PITCH_SHIFTER	/usr/include/AL/efx.h	162;"	d	language:C++
AL_EFFECT_REVERB	/usr/include/AL/efx.h	155;"	d	language:C++
AL_EFFECT_RING_MODULATOR	/usr/include/AL/efx.h	163;"	d	language:C++
AL_EFFECT_TYPE	/usr/include/AL/efx.h	151;"	d	language:C++
AL_EFFECT_VOCAL_MORPHER	/usr/include/AL/efx.h	161;"	d	language:C++
AL_EFX_H	/usr/include/AL/efx.h	2;"	d	language:C++
AL_EQUALIZER_DEFAULT_HIGH_CUTOFF	/usr/include/AL/efx.h	722;"	d	language:C++
AL_EQUALIZER_DEFAULT_HIGH_GAIN	/usr/include/AL/efx.h	718;"	d	language:C++
AL_EQUALIZER_DEFAULT_LOW_CUTOFF	/usr/include/AL/efx.h	690;"	d	language:C++
AL_EQUALIZER_DEFAULT_LOW_GAIN	/usr/include/AL/efx.h	686;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID1_CENTER	/usr/include/AL/efx.h	698;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID1_GAIN	/usr/include/AL/efx.h	694;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID1_WIDTH	/usr/include/AL/efx.h	702;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID2_CENTER	/usr/include/AL/efx.h	710;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID2_GAIN	/usr/include/AL/efx.h	706;"	d	language:C++
AL_EQUALIZER_DEFAULT_MID2_WIDTH	/usr/include/AL/efx.h	714;"	d	language:C++
AL_EQUALIZER_HIGH_CUTOFF	/usr/include/AL/efx.h	146;"	d	language:C++
AL_EQUALIZER_HIGH_GAIN	/usr/include/AL/efx.h	145;"	d	language:C++
AL_EQUALIZER_LOW_CUTOFF	/usr/include/AL/efx.h	138;"	d	language:C++
AL_EQUALIZER_LOW_GAIN	/usr/include/AL/efx.h	137;"	d	language:C++
AL_EQUALIZER_MAX_HIGH_CUTOFF	/usr/include/AL/efx.h	721;"	d	language:C++
AL_EQUALIZER_MAX_HIGH_GAIN	/usr/include/AL/efx.h	717;"	d	language:C++
AL_EQUALIZER_MAX_LOW_CUTOFF	/usr/include/AL/efx.h	689;"	d	language:C++
AL_EQUALIZER_MAX_LOW_GAIN	/usr/include/AL/efx.h	685;"	d	language:C++
AL_EQUALIZER_MAX_MID1_CENTER	/usr/include/AL/efx.h	697;"	d	language:C++
AL_EQUALIZER_MAX_MID1_GAIN	/usr/include/AL/efx.h	693;"	d	language:C++
AL_EQUALIZER_MAX_MID1_WIDTH	/usr/include/AL/efx.h	701;"	d	language:C++
AL_EQUALIZER_MAX_MID2_CENTER	/usr/include/AL/efx.h	709;"	d	language:C++
AL_EQUALIZER_MAX_MID2_GAIN	/usr/include/AL/efx.h	705;"	d	language:C++
AL_EQUALIZER_MAX_MID2_WIDTH	/usr/include/AL/efx.h	713;"	d	language:C++
AL_EQUALIZER_MID1_CENTER	/usr/include/AL/efx.h	140;"	d	language:C++
AL_EQUALIZER_MID1_GAIN	/usr/include/AL/efx.h	139;"	d	language:C++
AL_EQUALIZER_MID1_WIDTH	/usr/include/AL/efx.h	141;"	d	language:C++
AL_EQUALIZER_MID2_CENTER	/usr/include/AL/efx.h	143;"	d	language:C++
AL_EQUALIZER_MID2_GAIN	/usr/include/AL/efx.h	142;"	d	language:C++
AL_EQUALIZER_MID2_WIDTH	/usr/include/AL/efx.h	144;"	d	language:C++
AL_EQUALIZER_MIN_HIGH_CUTOFF	/usr/include/AL/efx.h	720;"	d	language:C++
AL_EQUALIZER_MIN_HIGH_GAIN	/usr/include/AL/efx.h	716;"	d	language:C++
AL_EQUALIZER_MIN_LOW_CUTOFF	/usr/include/AL/efx.h	688;"	d	language:C++
AL_EQUALIZER_MIN_LOW_GAIN	/usr/include/AL/efx.h	684;"	d	language:C++
AL_EQUALIZER_MIN_MID1_CENTER	/usr/include/AL/efx.h	696;"	d	language:C++
AL_EQUALIZER_MIN_MID1_GAIN	/usr/include/AL/efx.h	692;"	d	language:C++
AL_EQUALIZER_MIN_MID1_WIDTH	/usr/include/AL/efx.h	700;"	d	language:C++
AL_EQUALIZER_MIN_MID2_CENTER	/usr/include/AL/efx.h	708;"	d	language:C++
AL_EQUALIZER_MIN_MID2_GAIN	/usr/include/AL/efx.h	704;"	d	language:C++
AL_EQUALIZER_MIN_MID2_WIDTH	/usr/include/AL/efx.h	712;"	d	language:C++
AL_EXPONENT_DISTANCE	/usr/include/AL/al.h	449;"	d	language:C++
AL_EXPONENT_DISTANCE_CLAMPED	/usr/include/AL/al.h	450;"	d	language:C++
AL_EXTENSIONS	/usr/include/AL/al.h	389;"	d	language:C++
AL_EXT_ALAW	/usr/include/AL/alext.h	86;"	d	language:C++
AL_EXT_FOLDBACK	/usr/include/AL/alext.h	183;"	d	language:C++
AL_EXT_FOLDBACK_NAME	/usr/include/AL/alext.h	184;"	d	language:C++
AL_EXT_IMA4	/usr/include/AL/alext.h	129;"	d	language:C++
AL_EXT_MCFORMATS	/usr/include/AL/alext.h	99;"	d	language:C++
AL_EXT_MULAW	/usr/include/AL/alext.h	80;"	d	language:C++
AL_EXT_MULAW_MCFORMATS	/usr/include/AL/alext.h	118;"	d	language:C++
AL_EXT_SOURCE_RADIUS	/usr/include/AL/alext.h	313;"	d	language:C++
AL_EXT_STATIC_BUFFER	/usr/include/AL/alext.h	135;"	d	language:C++
AL_EXT_STEREO_ANGLES	/usr/include/AL/alext.h	308;"	d	language:C++
AL_EXT_double	/usr/include/AL/alext.h	74;"	d	language:C++
AL_EXT_float32	/usr/include/AL/alext.h	68;"	d	language:C++
AL_EXT_source_distance_model	/usr/include/AL/alext.h	163;"	d	language:C++
AL_EXT_vorbis	/usr/include/AL/alext.h	57;"	d	language:C++
AL_FALSE	/usr/include/AL/al.h	83;"	d	language:C++
AL_FILTER_BANDPASS	/usr/include/AL/efx.h	202;"	d	language:C++
AL_FILTER_FIRST_PARAMETER	/usr/include/AL/efx.h	194;"	d	language:C++
AL_FILTER_HIGHPASS	/usr/include/AL/efx.h	201;"	d	language:C++
AL_FILTER_LAST_PARAMETER	/usr/include/AL/efx.h	195;"	d	language:C++
AL_FILTER_LOWPASS	/usr/include/AL/efx.h	200;"	d	language:C++
AL_FILTER_NULL	/usr/include/AL/efx.h	199;"	d	language:C++
AL_FILTER_TYPE	/usr/include/AL/efx.h	196;"	d	language:C++
AL_FLANGER_DEFAULT_DELAY	/usr/include/AL/efx.h	556;"	d	language:C++
AL_FLANGER_DEFAULT_DEPTH	/usr/include/AL/efx.h	548;"	d	language:C++
AL_FLANGER_DEFAULT_FEEDBACK	/usr/include/AL/efx.h	552;"	d	language:C++
AL_FLANGER_DEFAULT_PHASE	/usr/include/AL/efx.h	540;"	d	language:C++
AL_FLANGER_DEFAULT_RATE	/usr/include/AL/efx.h	544;"	d	language:C++
AL_FLANGER_DEFAULT_WAVEFORM	/usr/include/AL/efx.h	536;"	d	language:C++
AL_FLANGER_DELAY	/usr/include/AL/efx.h	103;"	d	language:C++
AL_FLANGER_DEPTH	/usr/include/AL/efx.h	101;"	d	language:C++
AL_FLANGER_FEEDBACK	/usr/include/AL/efx.h	102;"	d	language:C++
AL_FLANGER_MAX_DELAY	/usr/include/AL/efx.h	555;"	d	language:C++
AL_FLANGER_MAX_DEPTH	/usr/include/AL/efx.h	547;"	d	language:C++
AL_FLANGER_MAX_FEEDBACK	/usr/include/AL/efx.h	551;"	d	language:C++
AL_FLANGER_MAX_PHASE	/usr/include/AL/efx.h	539;"	d	language:C++
AL_FLANGER_MAX_RATE	/usr/include/AL/efx.h	543;"	d	language:C++
AL_FLANGER_MAX_WAVEFORM	/usr/include/AL/efx.h	535;"	d	language:C++
AL_FLANGER_MIN_DELAY	/usr/include/AL/efx.h	554;"	d	language:C++
AL_FLANGER_MIN_DEPTH	/usr/include/AL/efx.h	546;"	d	language:C++
AL_FLANGER_MIN_FEEDBACK	/usr/include/AL/efx.h	550;"	d	language:C++
AL_FLANGER_MIN_PHASE	/usr/include/AL/efx.h	538;"	d	language:C++
AL_FLANGER_MIN_RATE	/usr/include/AL/efx.h	542;"	d	language:C++
AL_FLANGER_MIN_WAVEFORM	/usr/include/AL/efx.h	534;"	d	language:C++
AL_FLANGER_PHASE	/usr/include/AL/efx.h	99;"	d	language:C++
AL_FLANGER_RATE	/usr/include/AL/efx.h	100;"	d	language:C++
AL_FLANGER_WAVEFORM	/usr/include/AL/efx.h	98;"	d	language:C++
AL_FLANGER_WAVEFORM_SINUSOID	/usr/include/AL/efx.h	531;"	d	language:C++
AL_FLANGER_WAVEFORM_TRIANGLE	/usr/include/AL/efx.h	532;"	d	language:C++
AL_FLOAT_SOFT	/usr/include/AL/alext.h	224;"	d	language:C++
AL_FOLDBACK_EVENT_BLOCK	/usr/include/AL/alext.h	185;"	d	language:C++
AL_FOLDBACK_EVENT_START	/usr/include/AL/alext.h	186;"	d	language:C++
AL_FOLDBACK_EVENT_STOP	/usr/include/AL/alext.h	187;"	d	language:C++
AL_FOLDBACK_MODE_MONO	/usr/include/AL/alext.h	188;"	d	language:C++
AL_FOLDBACK_MODE_STEREO	/usr/include/AL/alext.h	189;"	d	language:C++
AL_FORMAT_51CHN16	/usr/include/AL/alext.h	107;"	d	language:C++
AL_FORMAT_51CHN32	/usr/include/AL/alext.h	108;"	d	language:C++
AL_FORMAT_51CHN8	/usr/include/AL/alext.h	106;"	d	language:C++
AL_FORMAT_51CHN_MULAW	/usr/include/AL/alext.h	123;"	d	language:C++
AL_FORMAT_61CHN16	/usr/include/AL/alext.h	110;"	d	language:C++
AL_FORMAT_61CHN32	/usr/include/AL/alext.h	111;"	d	language:C++
AL_FORMAT_61CHN8	/usr/include/AL/alext.h	109;"	d	language:C++
AL_FORMAT_61CHN_MULAW	/usr/include/AL/alext.h	124;"	d	language:C++
AL_FORMAT_71CHN16	/usr/include/AL/alext.h	113;"	d	language:C++
AL_FORMAT_71CHN32	/usr/include/AL/alext.h	114;"	d	language:C++
AL_FORMAT_71CHN8	/usr/include/AL/alext.h	112;"	d	language:C++
AL_FORMAT_71CHN_MULAW	/usr/include/AL/alext.h	125;"	d	language:C++
AL_FORMAT_IMA_ADPCM_MONO16_EXT	/usr/include/AL/alext.h	47;"	d	language:C++
AL_FORMAT_IMA_ADPCM_STEREO16_EXT	/usr/include/AL/alext.h	48;"	d	language:C++
AL_FORMAT_MONO16	/usr/include/AL/al.h	340;"	d	language:C++
AL_FORMAT_MONO8	/usr/include/AL/al.h	339;"	d	language:C++
AL_FORMAT_MONO_ALAW_EXT	/usr/include/AL/alext.h	87;"	d	language:C++
AL_FORMAT_MONO_DOUBLE_EXT	/usr/include/AL/alext.h	75;"	d	language:C++
AL_FORMAT_MONO_FLOAT32	/usr/include/AL/alext.h	69;"	d	language:C++
AL_FORMAT_MONO_IMA4	/usr/include/AL/alext.h	130;"	d	language:C++
AL_FORMAT_MONO_MULAW	/usr/include/AL/alext.h	119;"	d	language:C++
AL_FORMAT_MONO_MULAW_EXT	/usr/include/AL/alext.h	81;"	d	language:C++
AL_FORMAT_QUAD16	/usr/include/AL/alext.h	101;"	d	language:C++
AL_FORMAT_QUAD16_LOKI	/usr/include/AL/alext.h	64;"	d	language:C++
AL_FORMAT_QUAD32	/usr/include/AL/alext.h	102;"	d	language:C++
AL_FORMAT_QUAD8	/usr/include/AL/alext.h	100;"	d	language:C++
AL_FORMAT_QUAD8_LOKI	/usr/include/AL/alext.h	63;"	d	language:C++
AL_FORMAT_QUAD_MULAW	/usr/include/AL/alext.h	121;"	d	language:C++
AL_FORMAT_REAR16	/usr/include/AL/alext.h	104;"	d	language:C++
AL_FORMAT_REAR32	/usr/include/AL/alext.h	105;"	d	language:C++
AL_FORMAT_REAR8	/usr/include/AL/alext.h	103;"	d	language:C++
AL_FORMAT_REAR_MULAW	/usr/include/AL/alext.h	122;"	d	language:C++
AL_FORMAT_STEREO16	/usr/include/AL/al.h	342;"	d	language:C++
AL_FORMAT_STEREO8	/usr/include/AL/al.h	341;"	d	language:C++
AL_FORMAT_STEREO_ALAW_EXT	/usr/include/AL/alext.h	88;"	d	language:C++
AL_FORMAT_STEREO_DOUBLE_EXT	/usr/include/AL/alext.h	76;"	d	language:C++
AL_FORMAT_STEREO_FLOAT32	/usr/include/AL/alext.h	70;"	d	language:C++
AL_FORMAT_STEREO_IMA4	/usr/include/AL/alext.h	131;"	d	language:C++
AL_FORMAT_STEREO_MULAW	/usr/include/AL/alext.h	120;"	d	language:C++
AL_FORMAT_STEREO_MULAW_EXT	/usr/include/AL/alext.h	82;"	d	language:C++
AL_FORMAT_VORBIS_EXT	/usr/include/AL/alext.h	58;"	d	language:C++
AL_FORMAT_WAVE_EXT	/usr/include/AL/alext.h	53;"	d	language:C++
AL_FREQUENCY	/usr/include/AL/al.h	345;"	d	language:C++
AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY	/usr/include/AL/efx.h	561;"	d	language:C++
AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION	/usr/include/AL/efx.h	565;"	d	language:C++
AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION	/usr/include/AL/efx.h	573;"	d	language:C++
AL_FREQUENCY_SHIFTER_DIRECTION_DOWN	/usr/include/AL/efx.h	567;"	d	language:C++
AL_FREQUENCY_SHIFTER_DIRECTION_OFF	/usr/include/AL/efx.h	569;"	d	language:C++
AL_FREQUENCY_SHIFTER_DIRECTION_UP	/usr/include/AL/efx.h	568;"	d	language:C++
AL_FREQUENCY_SHIFTER_FREQUENCY	/usr/include/AL/efx.h	106;"	d	language:C++
AL_FREQUENCY_SHIFTER_LEFT_DIRECTION	/usr/include/AL/efx.h	107;"	d	language:C++
AL_FREQUENCY_SHIFTER_MAX_FREQUENCY	/usr/include/AL/efx.h	560;"	d	language:C++
AL_FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION	/usr/include/AL/efx.h	564;"	d	language:C++
AL_FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION	/usr/include/AL/efx.h	572;"	d	language:C++
AL_FREQUENCY_SHIFTER_MIN_FREQUENCY	/usr/include/AL/efx.h	559;"	d	language:C++
AL_FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION	/usr/include/AL/efx.h	563;"	d	language:C++
AL_FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION	/usr/include/AL/efx.h	571;"	d	language:C++
AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION	/usr/include/AL/efx.h	108;"	d	language:C++
AL_GAIN	/usr/include/AL/al.h	196;"	d	language:C++
AL_HIGHPASS_DEFAULT_GAIN	/usr/include/AL/efx.h	296;"	d	language:C++
AL_HIGHPASS_DEFAULT_GAINLF	/usr/include/AL/efx.h	300;"	d	language:C++
AL_HIGHPASS_GAIN	/usr/include/AL/efx.h	185;"	d	language:C++
AL_HIGHPASS_GAINLF	/usr/include/AL/efx.h	186;"	d	language:C++
AL_HIGHPASS_MAX_GAIN	/usr/include/AL/efx.h	295;"	d	language:C++
AL_HIGHPASS_MAX_GAINLF	/usr/include/AL/efx.h	299;"	d	language:C++
AL_HIGHPASS_MIN_GAIN	/usr/include/AL/efx.h	294;"	d	language:C++
AL_HIGHPASS_MIN_GAINLF	/usr/include/AL/efx.h	298;"	d	language:C++
AL_ILLEGAL_COMMAND	/usr/include/AL/al.h	31;"	d	language:C++
AL_ILLEGAL_ENUM	/usr/include/AL/al.h	30;"	d	language:C++
AL_INITIAL	/usr/include/AL/al.h	238;"	d	language:C++
AL_INTERNAL_FORMAT_SOFT	/usr/include/AL/alext.h	253;"	d	language:C++
AL_INT_SOFT	/usr/include/AL/alext.h	222;"	d	language:C++
AL_INVALID	/usr/include/AL/al.h	29;"	d	language:C++
AL_INVALID_ENUM	/usr/include/AL/al.h	370;"	d	language:C++
AL_INVALID_NAME	/usr/include/AL/al.h	367;"	d	language:C++
AL_INVALID_OPERATION	/usr/include/AL/al.h	376;"	d	language:C++
AL_INVALID_VALUE	/usr/include/AL/al.h	373;"	d	language:C++
AL_INVERSE_DISTANCE	/usr/include/AL/al.h	445;"	d	language:C++
AL_INVERSE_DISTANCE_CLAMPED	/usr/include/AL/al.h	446;"	d	language:C++
AL_LINEAR_DISTANCE	/usr/include/AL/al.h	447;"	d	language:C++
AL_LINEAR_DISTANCE_CLAMPED	/usr/include/AL/al.h	448;"	d	language:C++
AL_LOKI_IMA_ADPCM_format	/usr/include/AL/alext.h	46;"	d	language:C++
AL_LOKI_WAVE_format	/usr/include/AL/alext.h	52;"	d	language:C++
AL_LOKI_quadriphonic	/usr/include/AL/alext.h	62;"	d	language:C++
AL_LOOPING	/usr/include/AL/al.h	173;"	d	language:C++
AL_LOOP_POINTS_SOFT	/usr/include/AL/alext.h	179;"	d	language:C++
AL_LOWPASS_DEFAULT_GAIN	/usr/include/AL/efx.h	287;"	d	language:C++
AL_LOWPASS_DEFAULT_GAINHF	/usr/include/AL/efx.h	291;"	d	language:C++
AL_LOWPASS_GAIN	/usr/include/AL/efx.h	181;"	d	language:C++
AL_LOWPASS_GAINHF	/usr/include/AL/efx.h	182;"	d	language:C++
AL_LOWPASS_MAX_GAIN	/usr/include/AL/efx.h	286;"	d	language:C++
AL_LOWPASS_MAX_GAINHF	/usr/include/AL/efx.h	290;"	d	language:C++
AL_LOWPASS_MIN_GAIN	/usr/include/AL/efx.h	285;"	d	language:C++
AL_LOWPASS_MIN_GAINHF	/usr/include/AL/efx.h	289;"	d	language:C++
AL_MAX_AIR_ABSORPTION_FACTOR	/usr/include/AL/efx.h	727;"	d	language:C++
AL_MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	747;"	d	language:C++
AL_MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO	/usr/include/AL/efx.h	743;"	d	language:C++
AL_MAX_CONE_OUTER_GAINHF	/usr/include/AL/efx.h	735;"	d	language:C++
AL_MAX_DIRECT_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	739;"	d	language:C++
AL_MAX_DISTANCE	/usr/include/AL/al.h	309;"	d	language:C++
AL_MAX_GAIN	/usr/include/AL/al.h	216;"	d	language:C++
AL_MAX_METERS_PER_UNIT	/usr/include/AL/efx.h	753;"	d	language:C++
AL_MAX_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	731;"	d	language:C++
AL_METERS_PER_UNIT	/usr/include/AL/efx.h	20;"	d	language:C++
AL_MIN_AIR_ABSORPTION_FACTOR	/usr/include/AL/efx.h	726;"	d	language:C++
AL_MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	746;"	d	language:C++
AL_MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO	/usr/include/AL/efx.h	742;"	d	language:C++
AL_MIN_CONE_OUTER_GAINHF	/usr/include/AL/efx.h	734;"	d	language:C++
AL_MIN_DIRECT_FILTER_GAINHF_AUTO	/usr/include/AL/efx.h	738;"	d	language:C++
AL_MIN_GAIN	/usr/include/AL/al.h	206;"	d	language:C++
AL_MIN_METERS_PER_UNIT	/usr/include/AL/efx.h	752;"	d	language:C++
AL_MIN_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	730;"	d	language:C++
AL_MONO16_SOFT	/usr/include/AL/alext.h	231;"	d	language:C++
AL_MONO32F_SOFT	/usr/include/AL/alext.h	232;"	d	language:C++
AL_MONO8_SOFT	/usr/include/AL/alext.h	230;"	d	language:C++
AL_MONO_SOFT	/usr/include/AL/alext.h	209;"	d	language:C++
AL_NONE	/usr/include/AL/al.h	80;"	d	language:C++
AL_NO_ERROR	/usr/include/AL/al.h	364;"	d	language:C++
AL_ORIENTATION	/usr/include/AL/al.h	228;"	d	language:C++
AL_OUT_OF_MEMORY	/usr/include/AL/al.h	379;"	d	language:C++
AL_PAUSED	/usr/include/AL/al.h	240;"	d	language:C++
AL_PENDING	/usr/include/AL/al.h	359;"	d	language:C++
AL_PITCH	/usr/include/AL/al.h	128;"	d	language:C++
AL_PITCH_SHIFTER_COARSE_TUNE	/usr/include/AL/efx.h	119;"	d	language:C++
AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE	/usr/include/AL/efx.h	638;"	d	language:C++
AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE	/usr/include/AL/efx.h	642;"	d	language:C++
AL_PITCH_SHIFTER_FINE_TUNE	/usr/include/AL/efx.h	120;"	d	language:C++
AL_PITCH_SHIFTER_MAX_COARSE_TUNE	/usr/include/AL/efx.h	637;"	d	language:C++
AL_PITCH_SHIFTER_MAX_FINE_TUNE	/usr/include/AL/efx.h	641;"	d	language:C++
AL_PITCH_SHIFTER_MIN_COARSE_TUNE	/usr/include/AL/efx.h	636;"	d	language:C++
AL_PITCH_SHIFTER_MIN_FINE_TUNE	/usr/include/AL/efx.h	640;"	d	language:C++
AL_PLAYING	/usr/include/AL/al.h	239;"	d	language:C++
AL_POSITION	/usr/include/AL/al.h	144;"	d	language:C++
AL_PROCESSED	/usr/include/AL/al.h	360;"	d	language:C++
AL_QUAD16_SOFT	/usr/include/AL/alext.h	237;"	d	language:C++
AL_QUAD32F_SOFT	/usr/include/AL/alext.h	238;"	d	language:C++
AL_QUAD8_SOFT	/usr/include/AL/alext.h	236;"	d	language:C++
AL_QUAD_SOFT	/usr/include/AL/alext.h	212;"	d	language:C++
AL_REAR16_SOFT	/usr/include/AL/alext.h	240;"	d	language:C++
AL_REAR32F_SOFT	/usr/include/AL/alext.h	241;"	d	language:C++
AL_REAR8_SOFT	/usr/include/AL/alext.h	239;"	d	language:C++
AL_REAR_SOFT	/usr/include/AL/alext.h	211;"	d	language:C++
AL_REFERENCE_DISTANCE	/usr/include/AL/al.h	274;"	d	language:C++
AL_RENDERER	/usr/include/AL/al.h	387;"	d	language:C++
AL_REVERB_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	46;"	d	language:C++
AL_REVERB_DECAY_HFLIMIT	/usr/include/AL/efx.h	48;"	d	language:C++
AL_REVERB_DECAY_HFRATIO	/usr/include/AL/efx.h	41;"	d	language:C++
AL_REVERB_DECAY_TIME	/usr/include/AL/efx.h	40;"	d	language:C++
AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	361;"	d	language:C++
AL_REVERB_DEFAULT_DECAY_HFLIMIT	/usr/include/AL/efx.h	369;"	d	language:C++
AL_REVERB_DEFAULT_DECAY_HFRATIO	/usr/include/AL/efx.h	341;"	d	language:C++
AL_REVERB_DEFAULT_DECAY_TIME	/usr/include/AL/efx.h	337;"	d	language:C++
AL_REVERB_DEFAULT_DENSITY	/usr/include/AL/efx.h	321;"	d	language:C++
AL_REVERB_DEFAULT_DIFFUSION	/usr/include/AL/efx.h	325;"	d	language:C++
AL_REVERB_DEFAULT_GAIN	/usr/include/AL/efx.h	329;"	d	language:C++
AL_REVERB_DEFAULT_GAINHF	/usr/include/AL/efx.h	333;"	d	language:C++
AL_REVERB_DEFAULT_LATE_REVERB_DELAY	/usr/include/AL/efx.h	357;"	d	language:C++
AL_REVERB_DEFAULT_LATE_REVERB_GAIN	/usr/include/AL/efx.h	353;"	d	language:C++
AL_REVERB_DEFAULT_REFLECTIONS_DELAY	/usr/include/AL/efx.h	349;"	d	language:C++
AL_REVERB_DEFAULT_REFLECTIONS_GAIN	/usr/include/AL/efx.h	345;"	d	language:C++
AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	365;"	d	language:C++
AL_REVERB_DENSITY	/usr/include/AL/efx.h	36;"	d	language:C++
AL_REVERB_DIFFUSION	/usr/include/AL/efx.h	37;"	d	language:C++
AL_REVERB_GAIN	/usr/include/AL/efx.h	38;"	d	language:C++
AL_REVERB_GAINHF	/usr/include/AL/efx.h	39;"	d	language:C++
AL_REVERB_LATE_REVERB_DELAY	/usr/include/AL/efx.h	45;"	d	language:C++
AL_REVERB_LATE_REVERB_GAIN	/usr/include/AL/efx.h	44;"	d	language:C++
AL_REVERB_MAX_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	360;"	d	language:C++
AL_REVERB_MAX_DECAY_HFLIMIT	/usr/include/AL/efx.h	368;"	d	language:C++
AL_REVERB_MAX_DECAY_HFRATIO	/usr/include/AL/efx.h	340;"	d	language:C++
AL_REVERB_MAX_DECAY_TIME	/usr/include/AL/efx.h	336;"	d	language:C++
AL_REVERB_MAX_DENSITY	/usr/include/AL/efx.h	320;"	d	language:C++
AL_REVERB_MAX_DIFFUSION	/usr/include/AL/efx.h	324;"	d	language:C++
AL_REVERB_MAX_GAIN	/usr/include/AL/efx.h	328;"	d	language:C++
AL_REVERB_MAX_GAINHF	/usr/include/AL/efx.h	332;"	d	language:C++
AL_REVERB_MAX_LATE_REVERB_DELAY	/usr/include/AL/efx.h	356;"	d	language:C++
AL_REVERB_MAX_LATE_REVERB_GAIN	/usr/include/AL/efx.h	352;"	d	language:C++
AL_REVERB_MAX_REFLECTIONS_DELAY	/usr/include/AL/efx.h	348;"	d	language:C++
AL_REVERB_MAX_REFLECTIONS_GAIN	/usr/include/AL/efx.h	344;"	d	language:C++
AL_REVERB_MAX_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	364;"	d	language:C++
AL_REVERB_MIN_AIR_ABSORPTION_GAINHF	/usr/include/AL/efx.h	359;"	d	language:C++
AL_REVERB_MIN_DECAY_HFLIMIT	/usr/include/AL/efx.h	367;"	d	language:C++
AL_REVERB_MIN_DECAY_HFRATIO	/usr/include/AL/efx.h	339;"	d	language:C++
AL_REVERB_MIN_DECAY_TIME	/usr/include/AL/efx.h	335;"	d	language:C++
AL_REVERB_MIN_DENSITY	/usr/include/AL/efx.h	319;"	d	language:C++
AL_REVERB_MIN_DIFFUSION	/usr/include/AL/efx.h	323;"	d	language:C++
AL_REVERB_MIN_GAIN	/usr/include/AL/efx.h	327;"	d	language:C++
AL_REVERB_MIN_GAINHF	/usr/include/AL/efx.h	331;"	d	language:C++
AL_REVERB_MIN_LATE_REVERB_DELAY	/usr/include/AL/efx.h	355;"	d	language:C++
AL_REVERB_MIN_LATE_REVERB_GAIN	/usr/include/AL/efx.h	351;"	d	language:C++
AL_REVERB_MIN_REFLECTIONS_DELAY	/usr/include/AL/efx.h	347;"	d	language:C++
AL_REVERB_MIN_REFLECTIONS_GAIN	/usr/include/AL/efx.h	343;"	d	language:C++
AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	363;"	d	language:C++
AL_REVERB_REFLECTIONS_DELAY	/usr/include/AL/efx.h	43;"	d	language:C++
AL_REVERB_REFLECTIONS_GAIN	/usr/include/AL/efx.h	42;"	d	language:C++
AL_REVERB_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	47;"	d	language:C++
AL_RING_MODULATOR_DEFAULT_FREQUENCY	/usr/include/AL/efx.h	647;"	d	language:C++
AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF	/usr/include/AL/efx.h	651;"	d	language:C++
AL_RING_MODULATOR_DEFAULT_WAVEFORM	/usr/include/AL/efx.h	659;"	d	language:C++
AL_RING_MODULATOR_FREQUENCY	/usr/include/AL/efx.h	123;"	d	language:C++
AL_RING_MODULATOR_HIGHPASS_CUTOFF	/usr/include/AL/efx.h	124;"	d	language:C++
AL_RING_MODULATOR_MAX_FREQUENCY	/usr/include/AL/efx.h	646;"	d	language:C++
AL_RING_MODULATOR_MAX_HIGHPASS_CUTOFF	/usr/include/AL/efx.h	650;"	d	language:C++
AL_RING_MODULATOR_MAX_WAVEFORM	/usr/include/AL/efx.h	658;"	d	language:C++
AL_RING_MODULATOR_MIN_FREQUENCY	/usr/include/AL/efx.h	645;"	d	language:C++
AL_RING_MODULATOR_MIN_HIGHPASS_CUTOFF	/usr/include/AL/efx.h	649;"	d	language:C++
AL_RING_MODULATOR_MIN_WAVEFORM	/usr/include/AL/efx.h	657;"	d	language:C++
AL_RING_MODULATOR_SAWTOOTH	/usr/include/AL/efx.h	654;"	d	language:C++
AL_RING_MODULATOR_SINUSOID	/usr/include/AL/efx.h	653;"	d	language:C++
AL_RING_MODULATOR_SQUARE	/usr/include/AL/efx.h	655;"	d	language:C++
AL_RING_MODULATOR_WAVEFORM	/usr/include/AL/efx.h	125;"	d	language:C++
AL_ROLLOFF_FACTOR	/usr/include/AL/al.h	286;"	d	language:C++
AL_ROOM_ROLLOFF_FACTOR	/usr/include/AL/efx.h	26;"	d	language:C++
AL_SAMPLE_LENGTH_SOFT	/usr/include/AL/alext.h	255;"	d	language:C++
AL_SAMPLE_OFFSET	/usr/include/AL/al.h	314;"	d	language:C++
AL_SAMPLE_OFFSET_LATENCY_SOFT	/usr/include/AL/alext.h	319;"	d	language:C++
AL_SAMPLE_RW_OFFSETS_SOFT	/usr/include/AL/alext.h	170;"	d	language:C++
AL_SEC_LENGTH_SOFT	/usr/include/AL/alext.h	256;"	d	language:C++
AL_SEC_OFFSET	/usr/include/AL/al.h	312;"	d	language:C++
AL_SEC_OFFSET_LATENCY_SOFT	/usr/include/AL/alext.h	320;"	d	language:C++
AL_SHORT_SOFT	/usr/include/AL/alext.h	220;"	d	language:C++
AL_SIZE	/usr/include/AL/al.h	351;"	d	language:C++
AL_SOFT_buffer_samples	/usr/include/AL/alext.h	207;"	d	language:C++
AL_SOFT_buffer_sub_data	/usr/include/AL/alext.h	168;"	d	language:C++
AL_SOFT_direct_channels	/usr/include/AL/alext.h	271;"	d	language:C++
AL_SOFT_loop_points	/usr/include/AL/alext.h	178;"	d	language:C++
AL_SOFT_source_latency	/usr/include/AL/alext.h	318;"	d	language:C++
AL_SOURCE_DISTANCE_MODEL	/usr/include/AL/alext.h	164;"	d	language:C++
AL_SOURCE_RADIUS	/usr/include/AL/alext.h	314;"	d	language:C++
AL_SOURCE_RELATIVE	/usr/include/AL/al.h	97;"	d	language:C++
AL_SOURCE_STATE	/usr/include/AL/al.h	235;"	d	language:C++
AL_SOURCE_TYPE	/usr/include/AL/al.h	331;"	d	language:C++
AL_SPEED_OF_SOUND	/usr/include/AL/al.h	420;"	d	language:C++
AL_STATIC	/usr/include/AL/al.h	334;"	d	language:C++
AL_STEREO16_SOFT	/usr/include/AL/alext.h	234;"	d	language:C++
AL_STEREO32F_SOFT	/usr/include/AL/alext.h	235;"	d	language:C++
AL_STEREO8_SOFT	/usr/include/AL/alext.h	233;"	d	language:C++
AL_STEREO_ANGLES	/usr/include/AL/alext.h	309;"	d	language:C++
AL_STEREO_SOFT	/usr/include/AL/alext.h	210;"	d	language:C++
AL_STOPPED	/usr/include/AL/al.h	241;"	d	language:C++
AL_STREAMING	/usr/include/AL/al.h	335;"	d	language:C++
AL_TRUE	/usr/include/AL/al.h	86;"	d	language:C++
AL_UNDETERMINED	/usr/include/AL/al.h	336;"	d	language:C++
AL_UNSIGNED_BYTE3_SOFT	/usr/include/AL/alext.h	227;"	d	language:C++
AL_UNSIGNED_BYTE_SOFT	/usr/include/AL/alext.h	219;"	d	language:C++
AL_UNSIGNED_INT_SOFT	/usr/include/AL/alext.h	223;"	d	language:C++
AL_UNSIGNED_SHORT_SOFT	/usr/include/AL/alext.h	221;"	d	language:C++
AL_UNUSED	/usr/include/AL/al.h	358;"	d	language:C++
AL_VELOCITY	/usr/include/AL/al.h	163;"	d	language:C++
AL_VENDOR	/usr/include/AL/al.h	383;"	d	language:C++
AL_VERSION	/usr/include/AL/al.h	385;"	d	language:C++
AL_VERSION_1_0	/usr/include/AL/al.h	34;"	d	language:C++
AL_VERSION_1_1	/usr/include/AL/al.h	35;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA	/usr/include/AL/efx.h	578;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING	/usr/include/AL/efx.h	582;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB	/usr/include/AL/efx.h	586;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING	/usr/include/AL/efx.h	590;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_RATE	/usr/include/AL/efx.h	633;"	d	language:C++
AL_VOCAL_MORPHER_DEFAULT_WAVEFORM	/usr/include/AL/efx.h	629;"	d	language:C++
AL_VOCAL_MORPHER_MAX_PHONEMEA	/usr/include/AL/efx.h	577;"	d	language:C++
AL_VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING	/usr/include/AL/efx.h	581;"	d	language:C++
AL_VOCAL_MORPHER_MAX_PHONEMEB	/usr/include/AL/efx.h	585;"	d	language:C++
AL_VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING	/usr/include/AL/efx.h	589;"	d	language:C++
AL_VOCAL_MORPHER_MAX_RATE	/usr/include/AL/efx.h	632;"	d	language:C++
AL_VOCAL_MORPHER_MAX_WAVEFORM	/usr/include/AL/efx.h	628;"	d	language:C++
AL_VOCAL_MORPHER_MIN_PHONEMEA	/usr/include/AL/efx.h	576;"	d	language:C++
AL_VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING	/usr/include/AL/efx.h	580;"	d	language:C++
AL_VOCAL_MORPHER_MIN_PHONEMEB	/usr/include/AL/efx.h	584;"	d	language:C++
AL_VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING	/usr/include/AL/efx.h	588;"	d	language:C++
AL_VOCAL_MORPHER_MIN_RATE	/usr/include/AL/efx.h	631;"	d	language:C++
AL_VOCAL_MORPHER_MIN_WAVEFORM	/usr/include/AL/efx.h	627;"	d	language:C++
AL_VOCAL_MORPHER_PHONEMEA	/usr/include/AL/efx.h	111;"	d	language:C++
AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING	/usr/include/AL/efx.h	112;"	d	language:C++
AL_VOCAL_MORPHER_PHONEMEB	/usr/include/AL/efx.h	113;"	d	language:C++
AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING	/usr/include/AL/efx.h	114;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_A	/usr/include/AL/efx.h	592;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_AA	/usr/include/AL/efx.h	597;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_AE	/usr/include/AL/efx.h	598;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_AH	/usr/include/AL/efx.h	599;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_AO	/usr/include/AL/efx.h	600;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_B	/usr/include/AL/efx.h	607;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_D	/usr/include/AL/efx.h	608;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_E	/usr/include/AL/efx.h	593;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_EH	/usr/include/AL/efx.h	601;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_ER	/usr/include/AL/efx.h	602;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_F	/usr/include/AL/efx.h	609;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_G	/usr/include/AL/efx.h	610;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_I	/usr/include/AL/efx.h	594;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_IH	/usr/include/AL/efx.h	603;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_IY	/usr/include/AL/efx.h	604;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_J	/usr/include/AL/efx.h	611;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_K	/usr/include/AL/efx.h	612;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_L	/usr/include/AL/efx.h	613;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_M	/usr/include/AL/efx.h	614;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_N	/usr/include/AL/efx.h	615;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_O	/usr/include/AL/efx.h	595;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_P	/usr/include/AL/efx.h	616;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_R	/usr/include/AL/efx.h	617;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_S	/usr/include/AL/efx.h	618;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_T	/usr/include/AL/efx.h	619;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_U	/usr/include/AL/efx.h	596;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_UH	/usr/include/AL/efx.h	605;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_UW	/usr/include/AL/efx.h	606;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_V	/usr/include/AL/efx.h	620;"	d	language:C++
AL_VOCAL_MORPHER_PHONEME_Z	/usr/include/AL/efx.h	621;"	d	language:C++
AL_VOCAL_MORPHER_RATE	/usr/include/AL/efx.h	116;"	d	language:C++
AL_VOCAL_MORPHER_WAVEFORM	/usr/include/AL/efx.h	115;"	d	language:C++
AL_VOCAL_MORPHER_WAVEFORM_SAWTOOTH	/usr/include/AL/efx.h	625;"	d	language:C++
AL_VOCAL_MORPHER_WAVEFORM_SINUSOID	/usr/include/AL/efx.h	623;"	d	language:C++
AL_VOCAL_MORPHER_WAVEFORM_TRIANGLE	/usr/include/AL/efx.h	624;"	d	language:C++
ALboolean	/usr/include/AL/al.h	/^typedef char ALboolean;$/;"	t	language:C++
ALbyte	/usr/include/AL/al.h	/^typedef signed char ALbyte;$/;"	t	language:C++
ALchar	/usr/include/AL/al.h	/^typedef char ALchar;$/;"	t	language:C++
ALdouble	/usr/include/AL/al.h	/^typedef double ALdouble;$/;"	t	language:C++
ALenum	/usr/include/AL/al.h	/^typedef int ALenum;$/;"	t	language:C++
ALfloat	/usr/include/AL/al.h	/^typedef float ALfloat;$/;"	t	language:C++
ALint	/usr/include/AL/al.h	/^typedef int ALint;$/;"	t	language:C++
ALint64SOFT	/usr/include/AL/alext.h	/^typedef int64_t ALint64SOFT;$/;"	t	language:C++
ALshort	/usr/include/AL/al.h	/^typedef short ALshort;$/;"	t	language:C++
ALsizei	/usr/include/AL/al.h	/^typedef int ALsizei;$/;"	t	language:C++
ALubyte	/usr/include/AL/al.h	/^typedef unsigned char ALubyte;$/;"	t	language:C++
ALuint	/usr/include/AL/al.h	/^typedef unsigned int ALuint;$/;"	t	language:C++
ALuint64SOFT	/usr/include/AL/alext.h	/^typedef uint64_t ALuint64SOFT;$/;"	t	language:C++
ALushort	/usr/include/AL/al.h	/^typedef unsigned short ALushort;$/;"	t	language:C++
ALvoid	/usr/include/AL/al.h	/^typedef void ALvoid;$/;"	t	language:C++
EFXEAXREVERBPROPERTIES	/usr/include/AL/efx-presets.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	language:C++	typeref:struct:__anon1
EFXEAXREVERBPROPERTIES_DEFINED	/usr/include/AL/efx-presets.h	7;"	d	language:C++
EFX_PRESETS_H	/usr/include/AL/efx-presets.h	4;"	d	language:C++
EFX_REVERB_PRESET_ALLEY	/usr/include/AL/efx-presets.h	79;"	d	language:C++
EFX_REVERB_PRESET_ARENA	/usr/include/AL/efx-presets.h	64;"	d	language:C++
EFX_REVERB_PRESET_AUDITORIUM	/usr/include/AL/efx-presets.h	55;"	d	language:C++
EFX_REVERB_PRESET_BATHROOM	/usr/include/AL/efx-presets.h	46;"	d	language:C++
EFX_REVERB_PRESET_CARPETEDHALLWAY	/usr/include/AL/efx-presets.h	70;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_ALCOVE	/usr/include/AL/efx-presets.h	141;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_COURTYARD	/usr/include/AL/efx-presets.h	138;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_CUPBOARD	/usr/include/AL/efx-presets.h	135;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_HALL	/usr/include/AL/efx-presets.h	132;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_LARGEROOM	/usr/include/AL/efx-presets.h	126;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_LONGPASSAGE	/usr/include/AL/efx-presets.h	129;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_MEDIUMROOM	/usr/include/AL/efx-presets.h	123;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_SHORTPASSAGE	/usr/include/AL/efx-presets.h	120;"	d	language:C++
EFX_REVERB_PRESET_CASTLE_SMALLROOM	/usr/include/AL/efx-presets.h	117;"	d	language:C++
EFX_REVERB_PRESET_CAVE	/usr/include/AL/efx-presets.h	61;"	d	language:C++
EFX_REVERB_PRESET_CHAPEL	/usr/include/AL/efx-presets.h	396;"	d	language:C++
EFX_REVERB_PRESET_CITY	/usr/include/AL/efx-presets.h	85;"	d	language:C++
EFX_REVERB_PRESET_CITY_ABANDONED	/usr/include/AL/efx-presets.h	388;"	d	language:C++
EFX_REVERB_PRESET_CITY_LIBRARY	/usr/include/AL/efx-presets.h	382;"	d	language:C++
EFX_REVERB_PRESET_CITY_MUSEUM	/usr/include/AL/efx-presets.h	379;"	d	language:C++
EFX_REVERB_PRESET_CITY_STREETS	/usr/include/AL/efx-presets.h	373;"	d	language:C++
EFX_REVERB_PRESET_CITY_SUBWAY	/usr/include/AL/efx-presets.h	376;"	d	language:C++
EFX_REVERB_PRESET_CITY_UNDERPASS	/usr/include/AL/efx-presets.h	385;"	d	language:C++
EFX_REVERB_PRESET_CONCERTHALL	/usr/include/AL/efx-presets.h	58;"	d	language:C++
EFX_REVERB_PRESET_DIZZY	/usr/include/AL/efx-presets.h	109;"	d	language:C++
EFX_REVERB_PRESET_DOME_SAINTPAULS	/usr/include/AL/efx-presets.h	305;"	d	language:C++
EFX_REVERB_PRESET_DOME_TOMB	/usr/include/AL/efx-presets.h	299;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_COMMENTATOR	/usr/include/AL/efx-presets.h	347;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_EMPTYGRANDSTAND	/usr/include/AL/efx-presets.h	365;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_FULLGRANDSTAND	/usr/include/AL/efx-presets.h	362;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_INCAR_LUXURY	/usr/include/AL/efx-presets.h	359;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_INCAR_RACER	/usr/include/AL/efx-presets.h	353;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_INCAR_SPORTS	/usr/include/AL/efx-presets.h	356;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_PITGARAGE	/usr/include/AL/efx-presets.h	350;"	d	language:C++
EFX_REVERB_PRESET_DRIVING_TUNNEL	/usr/include/AL/efx-presets.h	368;"	d	language:C++
EFX_REVERB_PRESET_DRUGGED	/usr/include/AL/efx-presets.h	106;"	d	language:C++
EFX_REVERB_PRESET_DUSTYROOM	/usr/include/AL/efx-presets.h	393;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_ALCOVE	/usr/include/AL/efx-presets.h	170;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_COURTYARD	/usr/include/AL/efx-presets.h	167;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_CUPBOARD	/usr/include/AL/efx-presets.h	164;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_HALL	/usr/include/AL/efx-presets.h	161;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_LARGEROOM	/usr/include/AL/efx-presets.h	155;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_LONGPASSAGE	/usr/include/AL/efx-presets.h	158;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_MEDIUMROOM	/usr/include/AL/efx-presets.h	152;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_SHORTPASSAGE	/usr/include/AL/efx-presets.h	149;"	d	language:C++
EFX_REVERB_PRESET_FACTORY_SMALLROOM	/usr/include/AL/efx-presets.h	146;"	d	language:C++
EFX_REVERB_PRESET_FOREST	/usr/include/AL/efx-presets.h	82;"	d	language:C++
EFX_REVERB_PRESET_GENERIC	/usr/include/AL/efx-presets.h	37;"	d	language:C++
EFX_REVERB_PRESET_HALLWAY	/usr/include/AL/efx-presets.h	73;"	d	language:C++
EFX_REVERB_PRESET_HANGAR	/usr/include/AL/efx-presets.h	67;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_ALCOVE	/usr/include/AL/efx-presets.h	199;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_COURTYARD	/usr/include/AL/efx-presets.h	196;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_CUPBOARD	/usr/include/AL/efx-presets.h	193;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_HALL	/usr/include/AL/efx-presets.h	190;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_LARGEROOM	/usr/include/AL/efx-presets.h	184;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_LONGPASSAGE	/usr/include/AL/efx-presets.h	187;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_MEDIUMROOM	/usr/include/AL/efx-presets.h	181;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_SHORTPASSAGE	/usr/include/AL/efx-presets.h	178;"	d	language:C++
EFX_REVERB_PRESET_ICEPALACE_SMALLROOM	/usr/include/AL/efx-presets.h	175;"	d	language:C++
EFX_REVERB_PRESET_LIVINGROOM	/usr/include/AL/efx-presets.h	49;"	d	language:C++
EFX_REVERB_PRESET_MOOD_HEAVEN	/usr/include/AL/efx-presets.h	336;"	d	language:C++
EFX_REVERB_PRESET_MOOD_HELL	/usr/include/AL/efx-presets.h	339;"	d	language:C++
EFX_REVERB_PRESET_MOOD_MEMORY	/usr/include/AL/efx-presets.h	342;"	d	language:C++
EFX_REVERB_PRESET_MOUNTAINS	/usr/include/AL/efx-presets.h	88;"	d	language:C++
EFX_REVERB_PRESET_OUTDOORS_BACKYARD	/usr/include/AL/efx-presets.h	319;"	d	language:C++
EFX_REVERB_PRESET_OUTDOORS_CREEK	/usr/include/AL/efx-presets.h	328;"	d	language:C++
EFX_REVERB_PRESET_OUTDOORS_DEEPCANYON	/usr/include/AL/efx-presets.h	325;"	d	language:C++
EFX_REVERB_PRESET_OUTDOORS_ROLLINGPLAINS	/usr/include/AL/efx-presets.h	322;"	d	language:C++
EFX_REVERB_PRESET_OUTDOORS_VALLEY	/usr/include/AL/efx-presets.h	331;"	d	language:C++
EFX_REVERB_PRESET_PADDEDCELL	/usr/include/AL/efx-presets.h	40;"	d	language:C++
EFX_REVERB_PRESET_PARKINGLOT	/usr/include/AL/efx-presets.h	97;"	d	language:C++
EFX_REVERB_PRESET_PIPE_LARGE	/usr/include/AL/efx-presets.h	311;"	d	language:C++
EFX_REVERB_PRESET_PIPE_LONGTHIN	/usr/include/AL/efx-presets.h	308;"	d	language:C++
EFX_REVERB_PRESET_PIPE_RESONANT	/usr/include/AL/efx-presets.h	314;"	d	language:C++
EFX_REVERB_PRESET_PIPE_SMALL	/usr/include/AL/efx-presets.h	302;"	d	language:C++
EFX_REVERB_PRESET_PLAIN	/usr/include/AL/efx-presets.h	94;"	d	language:C++
EFX_REVERB_PRESET_PREFAB_CARAVAN	/usr/include/AL/efx-presets.h	294;"	d	language:C++
EFX_REVERB_PRESET_PREFAB_OUTHOUSE	/usr/include/AL/efx-presets.h	291;"	d	language:C++
EFX_REVERB_PRESET_PREFAB_PRACTISEROOM	/usr/include/AL/efx-presets.h	288;"	d	language:C++
EFX_REVERB_PRESET_PREFAB_SCHOOLROOM	/usr/include/AL/efx-presets.h	285;"	d	language:C++
EFX_REVERB_PRESET_PREFAB_WORKSHOP	/usr/include/AL/efx-presets.h	282;"	d	language:C++
EFX_REVERB_PRESET_PSYCHOTIC	/usr/include/AL/efx-presets.h	112;"	d	language:C++
EFX_REVERB_PRESET_QUARRY	/usr/include/AL/efx-presets.h	91;"	d	language:C++
EFX_REVERB_PRESET_ROOM	/usr/include/AL/efx-presets.h	43;"	d	language:C++
EFX_REVERB_PRESET_SEWERPIPE	/usr/include/AL/efx-presets.h	100;"	d	language:C++
EFX_REVERB_PRESET_SMALLWATERROOM	/usr/include/AL/efx-presets.h	399;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_ALCOVE	/usr/include/AL/efx-presets.h	225;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_CUPBOARD	/usr/include/AL/efx-presets.h	222;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_HALL	/usr/include/AL/efx-presets.h	219;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_LARGEROOM	/usr/include/AL/efx-presets.h	213;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_LONGPASSAGE	/usr/include/AL/efx-presets.h	216;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_MEDIUMROOM	/usr/include/AL/efx-presets.h	210;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_SHORTPASSAGE	/usr/include/AL/efx-presets.h	207;"	d	language:C++
EFX_REVERB_PRESET_SPACESTATION_SMALLROOM	/usr/include/AL/efx-presets.h	204;"	d	language:C++
EFX_REVERB_PRESET_SPORT_EMPTYSTADIUM	/usr/include/AL/efx-presets.h	259;"	d	language:C++
EFX_REVERB_PRESET_SPORT_FULLSTADIUM	/usr/include/AL/efx-presets.h	274;"	d	language:C++
EFX_REVERB_PRESET_SPORT_GYMNASIUM	/usr/include/AL/efx-presets.h	271;"	d	language:C++
EFX_REVERB_PRESET_SPORT_LARGESWIMMINGPOOL	/usr/include/AL/efx-presets.h	268;"	d	language:C++
EFX_REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL	/usr/include/AL/efx-presets.h	265;"	d	language:C++
EFX_REVERB_PRESET_SPORT_SQUASHCOURT	/usr/include/AL/efx-presets.h	262;"	d	language:C++
EFX_REVERB_PRESET_SPORT_STADIUMTANNOY	/usr/include/AL/efx-presets.h	277;"	d	language:C++
EFX_REVERB_PRESET_STONECORRIDOR	/usr/include/AL/efx-presets.h	76;"	d	language:C++
EFX_REVERB_PRESET_STONEROOM	/usr/include/AL/efx-presets.h	52;"	d	language:C++
EFX_REVERB_PRESET_UNDERWATER	/usr/include/AL/efx-presets.h	103;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_ALCOVE	/usr/include/AL/efx-presets.h	254;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_COURTYARD	/usr/include/AL/efx-presets.h	251;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_CUPBOARD	/usr/include/AL/efx-presets.h	248;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_HALL	/usr/include/AL/efx-presets.h	245;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_LARGEROOM	/usr/include/AL/efx-presets.h	239;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_LONGPASSAGE	/usr/include/AL/efx-presets.h	242;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_MEDIUMROOM	/usr/include/AL/efx-presets.h	236;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_SHORTPASSAGE	/usr/include/AL/efx-presets.h	233;"	d	language:C++
EFX_REVERB_PRESET_WOODEN_SMALLROOM	/usr/include/AL/efx-presets.h	230;"	d	language:C++
LPALAUXILIARYEFFECTSLOTF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat);$/;"	t	language:C++
LPALAUXILIARYEFFECTSLOTFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, const ALfloat*);$/;"	t	language:C++
LPALAUXILIARYEFFECTSLOTI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint);$/;"	t	language:C++
LPALAUXILIARYEFFECTSLOTIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, const ALint*);$/;"	t	language:C++
LPALBUFFER3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFER3F)(ALuint buffer, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	t	language:C++
LPALBUFFER3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFER3I)(ALuint buffer, ALenum param, ALint value1, ALint value2, ALint value3);$/;"	t	language:C++
LPALBUFFERDATA	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFERDATA)(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq);$/;"	t	language:C++
LPALBUFFERF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFERF)(ALuint buffer, ALenum param, ALfloat value);$/;"	t	language:C++
LPALBUFFERFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFERFV)(ALuint buffer, ALenum param, const ALfloat *values);$/;"	t	language:C++
LPALBUFFERI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFERI)(ALuint buffer, ALenum param, ALint value);$/;"	t	language:C++
LPALBUFFERIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALBUFFERIV)(ALuint buffer, ALenum param, const ALint *values);$/;"	t	language:C++
LPALBUFFERSAMPLESSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALBUFFERSAMPLESSOFT)(ALuint,ALuint,ALenum,ALsizei,ALenum,ALenum,const ALvoid*);$/;"	t	language:C++
LPALBUFFERSUBSAMPLESSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALBUFFERSUBSAMPLESSOFT)(ALuint,ALsizei,ALsizei,ALenum,ALenum,const ALvoid*);$/;"	t	language:C++
LPALCCAPTURECLOSEDEVICE	/usr/include/AL/alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCAPTURECLOSEDEVICE)(ALCdevice *device);$/;"	t	language:C++
LPALCCAPTUREOPENDEVICE	/usr/include/AL/alc.h	/^typedef ALCdevice*     (ALC_APIENTRY *LPALCCAPTUREOPENDEVICE)(const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize);$/;"	t	language:C++
LPALCCAPTURESAMPLES	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESAMPLES)(ALCdevice *device, ALCvoid *buffer, ALCsizei samples);$/;"	t	language:C++
LPALCCAPTURESTART	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTART)(ALCdevice *device);$/;"	t	language:C++
LPALCCAPTURESTOP	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTOP)(ALCdevice *device);$/;"	t	language:C++
LPALCCLOSEDEVICE	/usr/include/AL/alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCLOSEDEVICE)(ALCdevice *device);$/;"	t	language:C++
LPALCCREATECONTEXT	/usr/include/AL/alc.h	/^typedef ALCcontext*    (ALC_APIENTRY *LPALCCREATECONTEXT)(ALCdevice *device, const ALCint *attrlist);$/;"	t	language:C++
LPALCDESTROYCONTEXT	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCDESTROYCONTEXT)(ALCcontext *context);$/;"	t	language:C++
LPALCGETCONTEXTSDEVICE	/usr/include/AL/alc.h	/^typedef ALCdevice*     (ALC_APIENTRY *LPALCGETCONTEXTSDEVICE)(ALCcontext *context);$/;"	t	language:C++
LPALCGETCURRENTCONTEXT	/usr/include/AL/alc.h	/^typedef ALCcontext*    (ALC_APIENTRY *LPALCGETCURRENTCONTEXT)(void);$/;"	t	language:C++
LPALCGETENUMVALUE	/usr/include/AL/alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname);$/;"	t	language:C++
LPALCGETERROR	/usr/include/AL/alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETERROR)(ALCdevice *device);$/;"	t	language:C++
LPALCGETINTEGERV	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCGETINTEGERV)(ALCdevice *device, ALCenum param, ALCsizei size, ALCint *values);$/;"	t	language:C++
LPALCGETPROCADDRESS	/usr/include/AL/alc.h	/^typedef void*          (ALC_APIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname);$/;"	t	language:C++
LPALCGETSTRING	/usr/include/AL/alc.h	/^typedef const ALCchar* (ALC_APIENTRY *LPALCGETSTRING)(ALCdevice *device, ALCenum param);$/;"	t	language:C++
LPALCISEXTENSIONPRESENT	/usr/include/AL/alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCISEXTENSIONPRESENT)(ALCdevice *device, const ALCchar *extname);$/;"	t	language:C++
LPALCISRENDERFORMATSUPPORTEDSOFT	/usr/include/AL/alext.h	/^typedef ALCboolean (ALC_APIENTRY*LPALCISRENDERFORMATSUPPORTEDSOFT)(ALCdevice*,ALCsizei,ALCenum,ALCenum);$/;"	t	language:C++
LPALCLOOPBACKOPENDEVICESOFT	/usr/include/AL/alext.h	/^typedef ALCdevice* (ALC_APIENTRY*LPALCLOOPBACKOPENDEVICESOFT)(const ALCchar*);$/;"	t	language:C++
LPALCMAKECONTEXTCURRENT	/usr/include/AL/alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCMAKECONTEXTCURRENT)(ALCcontext *context);$/;"	t	language:C++
LPALCOPENDEVICE	/usr/include/AL/alc.h	/^typedef ALCdevice*     (ALC_APIENTRY *LPALCOPENDEVICE)(const ALCchar *devicename);$/;"	t	language:C++
LPALCPROCESSCONTEXT	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCPROCESSCONTEXT)(ALCcontext *context);$/;"	t	language:C++
LPALCRENDERSAMPLESSOFT	/usr/include/AL/alext.h	/^typedef void (ALC_APIENTRY*LPALCRENDERSAMPLESSOFT)(ALCdevice*,ALCvoid*,ALCsizei);$/;"	t	language:C++
LPALCSUSPENDCONTEXT	/usr/include/AL/alc.h	/^typedef void           (ALC_APIENTRY *LPALCSUSPENDCONTEXT)(ALCcontext *context);$/;"	t	language:C++
LPALDELETEAUXILIARYEFFECTSLOTS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALDELETEAUXILIARYEFFECTSLOTS)(ALsizei, const ALuint*);$/;"	t	language:C++
LPALDELETEBUFFERS	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDELETEBUFFERS)(ALsizei n, const ALuint *buffers);$/;"	t	language:C++
LPALDELETEEFFECTS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALDELETEEFFECTS)(ALsizei, const ALuint*);$/;"	t	language:C++
LPALDELETEFILTERS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALDELETEFILTERS)(ALsizei, const ALuint*);$/;"	t	language:C++
LPALDELETESOURCES	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDELETESOURCES)(ALsizei n, const ALuint *sources);$/;"	t	language:C++
LPALDISABLE	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDISABLE)(ALenum capability);$/;"	t	language:C++
LPALDISTANCEMODEL	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDISTANCEMODEL)(ALenum distanceModel);$/;"	t	language:C++
LPALDOPPLERFACTOR	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDOPPLERFACTOR)(ALfloat value);$/;"	t	language:C++
LPALDOPPLERVELOCITY	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALDOPPLERVELOCITY)(ALfloat value);$/;"	t	language:C++
LPALEFFECTF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALEFFECTF)(ALuint, ALenum, ALfloat);$/;"	t	language:C++
LPALEFFECTFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALEFFECTFV)(ALuint, ALenum, const ALfloat*);$/;"	t	language:C++
LPALEFFECTI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALEFFECTI)(ALuint, ALenum, ALint);$/;"	t	language:C++
LPALEFFECTIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALEFFECTIV)(ALuint, ALenum, const ALint*);$/;"	t	language:C++
LPALENABLE	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALENABLE)(ALenum capability);$/;"	t	language:C++
LPALFILTERF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALFILTERF)(ALuint, ALenum, ALfloat);$/;"	t	language:C++
LPALFILTERFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALFILTERFV)(ALuint, ALenum, const ALfloat*);$/;"	t	language:C++
LPALFILTERI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALFILTERI)(ALuint, ALenum, ALint);$/;"	t	language:C++
LPALFILTERIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALFILTERIV)(ALuint, ALenum, const ALint*);$/;"	t	language:C++
LPALFOLDBACKCALLBACK	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALFOLDBACKCALLBACK)(ALenum,ALsizei);$/;"	t	language:C++
LPALGENAUXILIARYEFFECTSLOTS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGENAUXILIARYEFFECTSLOTS)(ALsizei, ALuint*);$/;"	t	language:C++
LPALGENBUFFERS	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGENBUFFERS)(ALsizei n, ALuint *buffers);$/;"	t	language:C++
LPALGENEFFECTS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGENEFFECTS)(ALsizei, ALuint*);$/;"	t	language:C++
LPALGENFILTERS	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGENFILTERS)(ALsizei, ALuint*);$/;"	t	language:C++
LPALGENSOURCES	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGENSOURCES)(ALsizei n, ALuint *sources);$/;"	t	language:C++
LPALGETAUXILIARYEFFECTSLOTF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETAUXILIARYEFFECTSLOTFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETAUXILIARYEFFECTSLOTI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETAUXILIARYEFFECTSLOTIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETBOOLEAN	/usr/include/AL/al.h	/^typedef ALboolean     (AL_APIENTRY *LPALGETBOOLEAN)(ALenum param);$/;"	t	language:C++
LPALGETBOOLEANV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBOOLEANV)(ALenum param, ALboolean *values);$/;"	t	language:C++
LPALGETBUFFER3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFER3F)(ALuint buffer, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	t	language:C++
LPALGETBUFFER3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFER3I)(ALuint buffer, ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	t	language:C++
LPALGETBUFFERF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFERF)(ALuint buffer, ALenum param, ALfloat *value);$/;"	t	language:C++
LPALGETBUFFERFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFERFV)(ALuint buffer, ALenum param, ALfloat *values);$/;"	t	language:C++
LPALGETBUFFERI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFERI)(ALuint buffer, ALenum param, ALint *value);$/;"	t	language:C++
LPALGETBUFFERIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETBUFFERIV)(ALuint buffer, ALenum param, ALint *values);$/;"	t	language:C++
LPALGETBUFFERSAMPLESSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETBUFFERSAMPLESSOFT)(ALuint,ALsizei,ALsizei,ALenum,ALenum,ALvoid*);$/;"	t	language:C++
LPALGETDOUBLE	/usr/include/AL/al.h	/^typedef ALdouble      (AL_APIENTRY *LPALGETDOUBLE)(ALenum param);$/;"	t	language:C++
LPALGETDOUBLEV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETDOUBLEV)(ALenum param, ALdouble *values);$/;"	t	language:C++
LPALGETEFFECTF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETEFFECTF)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETEFFECTFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETEFFECTFV)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETEFFECTI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETEFFECTI)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETEFFECTIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETEFFECTIV)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETENUMVALUE	/usr/include/AL/al.h	/^typedef ALenum        (AL_APIENTRY *LPALGETENUMVALUE)(const ALchar *ename);$/;"	t	language:C++
LPALGETERROR	/usr/include/AL/al.h	/^typedef ALenum        (AL_APIENTRY *LPALGETERROR)(void);$/;"	t	language:C++
LPALGETFILTERF	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETFILTERF)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETFILTERFV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETFILTERFV)(ALuint, ALenum, ALfloat*);$/;"	t	language:C++
LPALGETFILTERI	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETFILTERI)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETFILTERIV	/usr/include/AL/efx.h	/^typedef void (AL_APIENTRY *LPALGETFILTERIV)(ALuint, ALenum, ALint*);$/;"	t	language:C++
LPALGETFLOAT	/usr/include/AL/al.h	/^typedef ALfloat       (AL_APIENTRY *LPALGETFLOAT)(ALenum param);$/;"	t	language:C++
LPALGETFLOATV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETFLOATV)(ALenum param, ALfloat *values);$/;"	t	language:C++
LPALGETINTEGER	/usr/include/AL/al.h	/^typedef ALint         (AL_APIENTRY *LPALGETINTEGER)(ALenum param);$/;"	t	language:C++
LPALGETINTEGERV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETINTEGERV)(ALenum param, ALint *values);$/;"	t	language:C++
LPALGETLISTENER3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENER3F)(ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	t	language:C++
LPALGETLISTENER3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENER3I)(ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	t	language:C++
LPALGETLISTENERF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENERF)(ALenum param, ALfloat *value);$/;"	t	language:C++
LPALGETLISTENERFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENERFV)(ALenum param, ALfloat *values);$/;"	t	language:C++
LPALGETLISTENERI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENERI)(ALenum param, ALint *value);$/;"	t	language:C++
LPALGETLISTENERIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETLISTENERIV)(ALenum param, ALint *values);$/;"	t	language:C++
LPALGETPROCADDRESS	/usr/include/AL/al.h	/^typedef void*         (AL_APIENTRY *LPALGETPROCADDRESS)(const ALchar *fname);$/;"	t	language:C++
LPALGETSOURCE3DSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCE3DSOFT)(ALuint,ALenum,ALdouble*,ALdouble*,ALdouble*);$/;"	t	language:C++
LPALGETSOURCE3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCE3F)(ALuint source, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	t	language:C++
LPALGETSOURCE3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCE3I)(ALuint source, ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	t	language:C++
LPALGETSOURCE3I64SOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCE3I64SOFT)(ALuint,ALenum,ALint64SOFT*,ALint64SOFT*,ALint64SOFT*);$/;"	t	language:C++
LPALGETSOURCEDSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCEDSOFT)(ALuint,ALenum,ALdouble*);$/;"	t	language:C++
LPALGETSOURCEDVSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCEDVSOFT)(ALuint,ALenum,ALdouble*);$/;"	t	language:C++
LPALGETSOURCEF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCEF)(ALuint source, ALenum param, ALfloat *value);$/;"	t	language:C++
LPALGETSOURCEFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCEFV)(ALuint source, ALenum param, ALfloat *values);$/;"	t	language:C++
LPALGETSOURCEI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCEI)(ALuint source, ALenum param, ALint *value);$/;"	t	language:C++
LPALGETSOURCEI64SOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCEI64SOFT)(ALuint,ALenum,ALint64SOFT*);$/;"	t	language:C++
LPALGETSOURCEI64VSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALGETSOURCEI64VSOFT)(ALuint,ALenum,ALint64SOFT*);$/;"	t	language:C++
LPALGETSOURCEIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALGETSOURCEIV)(ALuint source, ALenum param, ALint *values);$/;"	t	language:C++
LPALGETSTRING	/usr/include/AL/al.h	/^typedef const ALchar* (AL_APIENTRY *LPALGETSTRING)(ALenum param);$/;"	t	language:C++
LPALISAUXILIARYEFFECTSLOT	/usr/include/AL/efx.h	/^typedef ALboolean (AL_APIENTRY *LPALISAUXILIARYEFFECTSLOT)(ALuint);$/;"	t	language:C++
LPALISBUFFER	/usr/include/AL/al.h	/^typedef ALboolean     (AL_APIENTRY *LPALISBUFFER)(ALuint buffer);$/;"	t	language:C++
LPALISBUFFERFORMATSUPPORTEDSOFT	/usr/include/AL/alext.h	/^typedef ALboolean (AL_APIENTRY*LPALISBUFFERFORMATSUPPORTEDSOFT)(ALenum);$/;"	t	language:C++
LPALISEFFECT	/usr/include/AL/efx.h	/^typedef ALboolean (AL_APIENTRY *LPALISEFFECT)(ALuint);$/;"	t	language:C++
LPALISENABLED	/usr/include/AL/al.h	/^typedef ALboolean     (AL_APIENTRY *LPALISENABLED)(ALenum capability);$/;"	t	language:C++
LPALISEXTENSIONPRESENT	/usr/include/AL/al.h	/^typedef ALboolean     (AL_APIENTRY *LPALISEXTENSIONPRESENT)(const ALchar *extname);$/;"	t	language:C++
LPALISFILTER	/usr/include/AL/efx.h	/^typedef ALboolean (AL_APIENTRY *LPALISFILTER)(ALuint);$/;"	t	language:C++
LPALISSOURCE	/usr/include/AL/al.h	/^typedef ALboolean     (AL_APIENTRY *LPALISSOURCE)(ALuint source);$/;"	t	language:C++
LPALLISTENER3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENER3F)(ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	t	language:C++
LPALLISTENER3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENER3I)(ALenum param, ALint value1, ALint value2, ALint value3);$/;"	t	language:C++
LPALLISTENERF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENERF)(ALenum param, ALfloat value);$/;"	t	language:C++
LPALLISTENERFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENERFV)(ALenum param, const ALfloat *values);$/;"	t	language:C++
LPALLISTENERI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENERI)(ALenum param, ALint value);$/;"	t	language:C++
LPALLISTENERIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALLISTENERIV)(ALenum param, const ALint *values);$/;"	t	language:C++
LPALREQUESTFOLDBACKSTART	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTART)(ALenum,ALsizei,ALsizei,ALfloat*,LPALFOLDBACKCALLBACK);$/;"	t	language:C++
LPALREQUESTFOLDBACKSTOP	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTOP)(void);$/;"	t	language:C++
LPALSOURCE3DSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCE3DSOFT)(ALuint,ALenum,ALdouble,ALdouble,ALdouble);$/;"	t	language:C++
LPALSOURCE3F	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCE3F)(ALuint source, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	t	language:C++
LPALSOURCE3I	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCE3I)(ALuint source, ALenum param, ALint value1, ALint value2, ALint value3);$/;"	t	language:C++
LPALSOURCE3I64SOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCE3I64SOFT)(ALuint,ALenum,ALint64SOFT,ALint64SOFT,ALint64SOFT);$/;"	t	language:C++
LPALSOURCEDSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCEDSOFT)(ALuint,ALenum,ALdouble);$/;"	t	language:C++
LPALSOURCEDVSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCEDVSOFT)(ALuint,ALenum,const ALdouble*);$/;"	t	language:C++
LPALSOURCEF	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEF)(ALuint source, ALenum param, ALfloat value);$/;"	t	language:C++
LPALSOURCEFV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEFV)(ALuint source, ALenum param, const ALfloat *values);$/;"	t	language:C++
LPALSOURCEI	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEI)(ALuint source, ALenum param, ALint value);$/;"	t	language:C++
LPALSOURCEI64SOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCEI64SOFT)(ALuint,ALenum,ALint64SOFT);$/;"	t	language:C++
LPALSOURCEI64VSOFT	/usr/include/AL/alext.h	/^typedef void (AL_APIENTRY*LPALSOURCEI64VSOFT)(ALuint,ALenum,const ALint64SOFT*);$/;"	t	language:C++
LPALSOURCEIV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEIV)(ALuint source, ALenum param, const ALint *values);$/;"	t	language:C++
LPALSOURCEPAUSE	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEPAUSE)(ALuint source);$/;"	t	language:C++
LPALSOURCEPAUSEV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEPAUSEV)(ALsizei n, const ALuint *sources);$/;"	t	language:C++
LPALSOURCEPLAY	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEPLAY)(ALuint source);$/;"	t	language:C++
LPALSOURCEPLAYV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEPLAYV)(ALsizei n, const ALuint *sources);$/;"	t	language:C++
LPALSOURCEQUEUEBUFFERS	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint source, ALsizei nb, const ALuint *buffers);$/;"	t	language:C++
LPALSOURCEREWIND	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEREWIND)(ALuint source);$/;"	t	language:C++
LPALSOURCEREWINDV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEREWINDV)(ALsizei n, const ALuint *sources);$/;"	t	language:C++
LPALSOURCESTOP	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCESTOP)(ALuint source);$/;"	t	language:C++
LPALSOURCESTOPV	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCESTOPV)(ALsizei n, const ALuint *sources);$/;"	t	language:C++
LPALSOURCEUNQUEUEBUFFERS	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint source, ALsizei nb, ALuint *buffers);$/;"	t	language:C++
LPALSPEEDOFSOUND	/usr/include/AL/al.h	/^typedef void          (AL_APIENTRY *LPALSPEEDOFSOUND)(ALfloat value);$/;"	t	language:C++
LPEFXEAXREVERBPROPERTIES	/usr/include/AL/efx-presets.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	language:C++	typeref:struct:__anon1
OPENAL	/usr/include/AL/al.h	26;"	d	language:C++
PFNALBUFFERDATASTATICPROC	/usr/include/AL/alext.h	/^typedef ALvoid (AL_APIENTRY*PFNALBUFFERDATASTATICPROC)(const ALint,ALenum,ALvoid*,ALsizei,ALsizei);$/;"	t	language:C++
PFNALBUFFERSUBDATASOFTPROC	/usr/include/AL/alext.h	/^typedef ALvoid (AL_APIENTRY*PFNALBUFFERSUBDATASOFTPROC)(ALuint,ALenum,const ALvoid*,ALsizei,ALsizei);$/;"	t	language:C++
PFNALCGETTHREADCONTEXTPROC	/usr/include/AL/alext.h	/^typedef ALCcontext* (ALC_APIENTRY*PFNALCGETTHREADCONTEXTPROC)(void);$/;"	t	language:C++
PFNALCSETTHREADCONTEXTPROC	/usr/include/AL/alext.h	/^typedef ALCboolean  (ALC_APIENTRY*PFNALCSETTHREADCONTEXTPROC)(ALCcontext *context);$/;"	t	language:C++
__anon1::flAirAbsorptionGainHF	/usr/include/AL/efx-presets.h	/^    float flAirAbsorptionGainHF;$/;"	m	language:C++	struct:__anon1
__anon1::flDecayHFRatio	/usr/include/AL/efx-presets.h	/^    float flDecayHFRatio;$/;"	m	language:C++	struct:__anon1
__anon1::flDecayLFRatio	/usr/include/AL/efx-presets.h	/^    float flDecayLFRatio;$/;"	m	language:C++	struct:__anon1
__anon1::flDecayTime	/usr/include/AL/efx-presets.h	/^    float flDecayTime;$/;"	m	language:C++	struct:__anon1
__anon1::flDensity	/usr/include/AL/efx-presets.h	/^    float flDensity;$/;"	m	language:C++	struct:__anon1
__anon1::flDiffusion	/usr/include/AL/efx-presets.h	/^    float flDiffusion;$/;"	m	language:C++	struct:__anon1
__anon1::flEchoDepth	/usr/include/AL/efx-presets.h	/^    float flEchoDepth;$/;"	m	language:C++	struct:__anon1
__anon1::flEchoTime	/usr/include/AL/efx-presets.h	/^    float flEchoTime;$/;"	m	language:C++	struct:__anon1
__anon1::flGain	/usr/include/AL/efx-presets.h	/^    float flGain;$/;"	m	language:C++	struct:__anon1
__anon1::flGainHF	/usr/include/AL/efx-presets.h	/^    float flGainHF;$/;"	m	language:C++	struct:__anon1
__anon1::flGainLF	/usr/include/AL/efx-presets.h	/^    float flGainLF;$/;"	m	language:C++	struct:__anon1
__anon1::flHFReference	/usr/include/AL/efx-presets.h	/^    float flHFReference;$/;"	m	language:C++	struct:__anon1
__anon1::flLFReference	/usr/include/AL/efx-presets.h	/^    float flLFReference;$/;"	m	language:C++	struct:__anon1
__anon1::flLateReverbDelay	/usr/include/AL/efx-presets.h	/^    float flLateReverbDelay;$/;"	m	language:C++	struct:__anon1
__anon1::flLateReverbGain	/usr/include/AL/efx-presets.h	/^    float flLateReverbGain;$/;"	m	language:C++	struct:__anon1
__anon1::flLateReverbPan	/usr/include/AL/efx-presets.h	/^    float flLateReverbPan[3];$/;"	m	language:C++	struct:__anon1
__anon1::flModulationDepth	/usr/include/AL/efx-presets.h	/^    float flModulationDepth;$/;"	m	language:C++	struct:__anon1
__anon1::flModulationTime	/usr/include/AL/efx-presets.h	/^    float flModulationTime;$/;"	m	language:C++	struct:__anon1
__anon1::flReflectionsDelay	/usr/include/AL/efx-presets.h	/^    float flReflectionsDelay;$/;"	m	language:C++	struct:__anon1
__anon1::flReflectionsGain	/usr/include/AL/efx-presets.h	/^    float flReflectionsGain;$/;"	m	language:C++	struct:__anon1
__anon1::flReflectionsPan	/usr/include/AL/efx-presets.h	/^    float flReflectionsPan[3];$/;"	m	language:C++	struct:__anon1
__anon1::flRoomRolloffFactor	/usr/include/AL/efx-presets.h	/^    float flRoomRolloffFactor;$/;"	m	language:C++	struct:__anon1
__anon1::iDecayHFLimit	/usr/include/AL/efx-presets.h	/^    int   iDecayHFLimit;$/;"	m	language:C++	struct:__anon1
alAuxiliaryEffectSlotf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alAuxiliaryEffectSlotf(ALuint effectslot, ALenum param, ALfloat flValue);$/;"	p	language:C++
alAuxiliaryEffectSlotfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alAuxiliaryEffectSlotfv(ALuint effectslot, ALenum param, const ALfloat *pflValues);$/;"	p	language:C++
alAuxiliaryEffectSloti	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alAuxiliaryEffectSloti(ALuint effectslot, ALenum param, ALint iValue);$/;"	p	language:C++
alAuxiliaryEffectSlotiv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alAuxiliaryEffectSlotiv(ALuint effectslot, ALenum param, const ALint *piValues);$/;"	p	language:C++
alBuffer3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBuffer3f(ALuint buffer, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	p	language:C++
alBuffer3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBuffer3i(ALuint buffer, ALenum param, ALint value1, ALint value2, ALint value3);$/;"	p	language:C++
alBufferData	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBufferData(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq);$/;"	p	language:C++
alBufferDataStatic	/usr/include/AL/alext.h	/^AL_API ALvoid AL_APIENTRY alBufferDataStatic(const ALint buffer, ALenum format, ALvoid *data, ALsizei len, ALsizei freq);$/;"	p	language:C++
alBufferSamplesSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alBufferSamplesSOFT(ALuint buffer, ALuint samplerate, ALenum internalformat, ALsizei samples, ALenum channels, ALenum type, const ALvoid *data);$/;"	p	language:C++
alBufferSubDataSOFT	/usr/include/AL/alext.h	/^AL_API ALvoid AL_APIENTRY alBufferSubDataSOFT(ALuint buffer,ALenum format,const ALvoid *data,ALsizei offset,ALsizei length);$/;"	p	language:C++
alBufferSubSamplesSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alBufferSubSamplesSOFT(ALuint buffer, ALsizei offset, ALsizei samples, ALenum channels, ALenum type, const ALvoid *data);$/;"	p	language:C++
alBufferf	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBufferf(ALuint buffer, ALenum param, ALfloat value);$/;"	p	language:C++
alBufferfv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBufferfv(ALuint buffer, ALenum param, const ALfloat *values);$/;"	p	language:C++
alBufferi	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBufferi(ALuint buffer, ALenum param, ALint value);$/;"	p	language:C++
alBufferiv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alBufferiv(ALuint buffer, ALenum param, const ALint *values);$/;"	p	language:C++
alDeleteAuxiliaryEffectSlots	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alDeleteAuxiliaryEffectSlots(ALsizei n, const ALuint *effectslots);$/;"	p	language:C++
alDeleteBuffers	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDeleteBuffers(ALsizei n, const ALuint *buffers);$/;"	p	language:C++
alDeleteEffects	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alDeleteEffects(ALsizei n, const ALuint *effects);$/;"	p	language:C++
alDeleteFilters	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alDeleteFilters(ALsizei n, const ALuint *filters);$/;"	p	language:C++
alDeleteSources	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDeleteSources(ALsizei n, const ALuint *sources);$/;"	p	language:C++
alDisable	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDisable(ALenum capability);$/;"	p	language:C++
alDistanceModel	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDistanceModel(ALenum distanceModel);$/;"	p	language:C++
alDopplerFactor	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDopplerFactor(ALfloat value);$/;"	p	language:C++
alDopplerVelocity	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alDopplerVelocity(ALfloat value);$/;"	p	language:C++
alEffectf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alEffectf(ALuint effect, ALenum param, ALfloat flValue);$/;"	p	language:C++
alEffectfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alEffectfv(ALuint effect, ALenum param, const ALfloat *pflValues);$/;"	p	language:C++
alEffecti	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alEffecti(ALuint effect, ALenum param, ALint iValue);$/;"	p	language:C++
alEffectiv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alEffectiv(ALuint effect, ALenum param, const ALint *piValues);$/;"	p	language:C++
alEnable	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alEnable(ALenum capability);$/;"	p	language:C++
alFilterf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alFilterf(ALuint filter, ALenum param, ALfloat flValue);$/;"	p	language:C++
alFilterfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alFilterfv(ALuint filter, ALenum param, const ALfloat *pflValues);$/;"	p	language:C++
alFilteri	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alFilteri(ALuint filter, ALenum param, ALint iValue);$/;"	p	language:C++
alFilteriv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alFilteriv(ALuint filter, ALenum param, const ALint *piValues);$/;"	p	language:C++
alGenAuxiliaryEffectSlots	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGenAuxiliaryEffectSlots(ALsizei n, ALuint *effectslots);$/;"	p	language:C++
alGenBuffers	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGenBuffers(ALsizei n, ALuint *buffers);$/;"	p	language:C++
alGenEffects	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGenEffects(ALsizei n, ALuint *effects);$/;"	p	language:C++
alGenFilters	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGenFilters(ALsizei n, ALuint *filters);$/;"	p	language:C++
alGenSources	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGenSources(ALsizei n, ALuint *sources);$/;"	p	language:C++
alGetAuxiliaryEffectSlotf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetAuxiliaryEffectSlotf(ALuint effectslot, ALenum param, ALfloat *pflValue);$/;"	p	language:C++
alGetAuxiliaryEffectSlotfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetAuxiliaryEffectSlotfv(ALuint effectslot, ALenum param, ALfloat *pflValues);$/;"	p	language:C++
alGetAuxiliaryEffectSloti	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetAuxiliaryEffectSloti(ALuint effectslot, ALenum param, ALint *piValue);$/;"	p	language:C++
alGetAuxiliaryEffectSlotiv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetAuxiliaryEffectSlotiv(ALuint effectslot, ALenum param, ALint *piValues);$/;"	p	language:C++
alGetBoolean	/usr/include/AL/al.h	/^AL_API ALboolean AL_APIENTRY alGetBoolean(ALenum param);$/;"	p	language:C++
alGetBooleanv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBooleanv(ALenum param, ALboolean *values);$/;"	p	language:C++
alGetBuffer3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBuffer3f(ALuint buffer, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	p	language:C++
alGetBuffer3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBuffer3i(ALuint buffer, ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	p	language:C++
alGetBufferSamplesSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetBufferSamplesSOFT(ALuint buffer, ALsizei offset, ALsizei samples, ALenum channels, ALenum type, ALvoid *data);$/;"	p	language:C++
alGetBufferf	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBufferf(ALuint buffer, ALenum param, ALfloat *value);$/;"	p	language:C++
alGetBufferfv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBufferfv(ALuint buffer, ALenum param, ALfloat *values);$/;"	p	language:C++
alGetBufferi	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBufferi(ALuint buffer, ALenum param, ALint *value);$/;"	p	language:C++
alGetBufferiv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetBufferiv(ALuint buffer, ALenum param, ALint *values);$/;"	p	language:C++
alGetDouble	/usr/include/AL/al.h	/^AL_API ALdouble AL_APIENTRY alGetDouble(ALenum param);$/;"	p	language:C++
alGetDoublev	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetDoublev(ALenum param, ALdouble *values);$/;"	p	language:C++
alGetEffectf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetEffectf(ALuint effect, ALenum param, ALfloat *pflValue);$/;"	p	language:C++
alGetEffectfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetEffectfv(ALuint effect, ALenum param, ALfloat *pflValues);$/;"	p	language:C++
alGetEffecti	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetEffecti(ALuint effect, ALenum param, ALint *piValue);$/;"	p	language:C++
alGetEffectiv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetEffectiv(ALuint effect, ALenum param, ALint *piValues);$/;"	p	language:C++
alGetEnumValue	/usr/include/AL/al.h	/^AL_API ALenum AL_APIENTRY alGetEnumValue(const ALchar *ename);$/;"	p	language:C++
alGetError	/usr/include/AL/al.h	/^AL_API ALenum AL_APIENTRY alGetError(void);$/;"	p	language:C++
alGetFilterf	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetFilterf(ALuint filter, ALenum param, ALfloat *pflValue);$/;"	p	language:C++
alGetFilterfv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetFilterfv(ALuint filter, ALenum param, ALfloat *pflValues);$/;"	p	language:C++
alGetFilteri	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetFilteri(ALuint filter, ALenum param, ALint *piValue);$/;"	p	language:C++
alGetFilteriv	/usr/include/AL/efx.h	/^AL_API ALvoid AL_APIENTRY alGetFilteriv(ALuint filter, ALenum param, ALint *piValues);$/;"	p	language:C++
alGetFloat	/usr/include/AL/al.h	/^AL_API ALfloat AL_APIENTRY alGetFloat(ALenum param);$/;"	p	language:C++
alGetFloatv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetFloatv(ALenum param, ALfloat *values);$/;"	p	language:C++
alGetInteger	/usr/include/AL/al.h	/^AL_API ALint AL_APIENTRY alGetInteger(ALenum param);$/;"	p	language:C++
alGetIntegerv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetIntegerv(ALenum param, ALint *values);$/;"	p	language:C++
alGetListener3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListener3f(ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	p	language:C++
alGetListener3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListener3i(ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	p	language:C++
alGetListenerf	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListenerf(ALenum param, ALfloat *value);$/;"	p	language:C++
alGetListenerfv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListenerfv(ALenum param, ALfloat *values);$/;"	p	language:C++
alGetListeneri	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListeneri(ALenum param, ALint *value);$/;"	p	language:C++
alGetListeneriv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetListeneriv(ALenum param, ALint *values);$/;"	p	language:C++
alGetProcAddress	/usr/include/AL/al.h	/^AL_API void* AL_APIENTRY alGetProcAddress(const ALchar *fname);$/;"	p	language:C++
alGetSource3dSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSource3dSOFT(ALuint source, ALenum param, ALdouble *value1, ALdouble *value2, ALdouble *value3);$/;"	p	language:C++
alGetSource3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSource3f(ALuint source, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);$/;"	p	language:C++
alGetSource3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSource3i(ALuint source, ALenum param, ALint *value1, ALint *value2, ALint *value3);$/;"	p	language:C++
alGetSource3i64SOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSource3i64SOFT(ALuint source, ALenum param, ALint64SOFT *value1, ALint64SOFT *value2, ALint64SOFT *value3);$/;"	p	language:C++
alGetSourcedSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSourcedSOFT(ALuint source, ALenum param, ALdouble *value);$/;"	p	language:C++
alGetSourcedvSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSourcedvSOFT(ALuint source, ALenum param, ALdouble *values);$/;"	p	language:C++
alGetSourcef	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSourcef(ALuint source, ALenum param, ALfloat *value);$/;"	p	language:C++
alGetSourcefv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSourcefv(ALuint source, ALenum param, ALfloat *values);$/;"	p	language:C++
alGetSourcei	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSourcei(ALuint source,  ALenum param, ALint *value);$/;"	p	language:C++
alGetSourcei64SOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSourcei64SOFT(ALuint source, ALenum param, ALint64SOFT *value);$/;"	p	language:C++
alGetSourcei64vSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alGetSourcei64vSOFT(ALuint source, ALenum param, ALint64SOFT *values);$/;"	p	language:C++
alGetSourceiv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alGetSourceiv(ALuint source,  ALenum param, ALint *values);$/;"	p	language:C++
alGetString	/usr/include/AL/al.h	/^AL_API const ALchar* AL_APIENTRY alGetString(ALenum param);$/;"	p	language:C++
alIsAuxiliaryEffectSlot	/usr/include/AL/efx.h	/^AL_API ALboolean AL_APIENTRY alIsAuxiliaryEffectSlot(ALuint effectslot);$/;"	p	language:C++
alIsBuffer	/usr/include/AL/al.h	/^AL_API ALboolean AL_APIENTRY alIsBuffer(ALuint buffer);$/;"	p	language:C++
alIsBufferFormatSupportedSOFT	/usr/include/AL/alext.h	/^AL_API ALboolean AL_APIENTRY alIsBufferFormatSupportedSOFT(ALenum format);$/;"	p	language:C++
alIsEffect	/usr/include/AL/efx.h	/^AL_API ALboolean AL_APIENTRY alIsEffect(ALuint effect);$/;"	p	language:C++
alIsEnabled	/usr/include/AL/al.h	/^AL_API ALboolean AL_APIENTRY alIsEnabled(ALenum capability);$/;"	p	language:C++
alIsExtensionPresent	/usr/include/AL/al.h	/^AL_API ALboolean AL_APIENTRY alIsExtensionPresent(const ALchar *extname);$/;"	p	language:C++
alIsFilter	/usr/include/AL/efx.h	/^AL_API ALboolean AL_APIENTRY alIsFilter(ALuint filter);$/;"	p	language:C++
alIsSource	/usr/include/AL/al.h	/^AL_API ALboolean AL_APIENTRY alIsSource(ALuint source);$/;"	p	language:C++
alListener3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListener3f(ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	p	language:C++
alListener3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListener3i(ALenum param, ALint value1, ALint value2, ALint value3);$/;"	p	language:C++
alListenerf	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListenerf(ALenum param, ALfloat value);$/;"	p	language:C++
alListenerfv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListenerfv(ALenum param, const ALfloat *values);$/;"	p	language:C++
alListeneri	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListeneri(ALenum param, ALint value);$/;"	p	language:C++
alListeneriv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alListeneriv(ALenum param, const ALint *values);$/;"	p	language:C++
alRequestFoldbackStart	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alRequestFoldbackStart(ALenum mode,ALsizei count,ALsizei length,ALfloat *mem,LPALFOLDBACKCALLBACK callback);$/;"	p	language:C++
alRequestFoldbackStop	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alRequestFoldbackStop(void);$/;"	p	language:C++
alSource3dSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSource3dSOFT(ALuint source, ALenum param, ALdouble value1, ALdouble value2, ALdouble value3);$/;"	p	language:C++
alSource3f	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSource3f(ALuint source, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);$/;"	p	language:C++
alSource3i	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSource3i(ALuint source, ALenum param, ALint value1, ALint value2, ALint value3);$/;"	p	language:C++
alSource3i64SOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSource3i64SOFT(ALuint source, ALenum param, ALint64SOFT value1, ALint64SOFT value2, ALint64SOFT value3);$/;"	p	language:C++
alSourcePause	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcePause(ALuint source);$/;"	p	language:C++
alSourcePausev	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcePausev(ALsizei n, const ALuint *sources);$/;"	p	language:C++
alSourcePlay	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcePlay(ALuint source);$/;"	p	language:C++
alSourcePlayv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcePlayv(ALsizei n, const ALuint *sources);$/;"	p	language:C++
alSourceQueueBuffers	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceQueueBuffers(ALuint source, ALsizei nb, const ALuint *buffers);$/;"	p	language:C++
alSourceRewind	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceRewind(ALuint source);$/;"	p	language:C++
alSourceRewindv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceRewindv(ALsizei n, const ALuint *sources);$/;"	p	language:C++
alSourceStop	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceStop(ALuint source);$/;"	p	language:C++
alSourceStopv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceStopv(ALsizei n, const ALuint *sources);$/;"	p	language:C++
alSourceUnqueueBuffers	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceUnqueueBuffers(ALuint source, ALsizei nb, ALuint *buffers);$/;"	p	language:C++
alSourcedSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSourcedSOFT(ALuint source, ALenum param, ALdouble value);$/;"	p	language:C++
alSourcedvSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSourcedvSOFT(ALuint source, ALenum param, const ALdouble *values);$/;"	p	language:C++
alSourcef	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcef(ALuint source, ALenum param, ALfloat value);$/;"	p	language:C++
alSourcefv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcefv(ALuint source, ALenum param, const ALfloat *values);$/;"	p	language:C++
alSourcei	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourcei(ALuint source, ALenum param, ALint value);$/;"	p	language:C++
alSourcei64SOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSourcei64SOFT(ALuint source, ALenum param, ALint64SOFT value);$/;"	p	language:C++
alSourcei64vSOFT	/usr/include/AL/alext.h	/^AL_API void AL_APIENTRY alSourcei64vSOFT(ALuint source, ALenum param, const ALint64SOFT *values);$/;"	p	language:C++
alSourceiv	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSourceiv(ALuint source, ALenum param, const ALint *values);$/;"	p	language:C++
alSpeedOfSound	/usr/include/AL/al.h	/^AL_API void AL_APIENTRY alSpeedOfSound(ALfloat value);$/;"	p	language:C++
alcCaptureCloseDevice	/usr/include/AL/alc.h	/^ALC_API ALCboolean ALC_APIENTRY alcCaptureCloseDevice(ALCdevice *device);$/;"	p	language:C++
alcCaptureOpenDevice	/usr/include/AL/alc.h	/^ALC_API ALCdevice* ALC_APIENTRY alcCaptureOpenDevice(const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize);$/;"	p	language:C++
alcCaptureSamples	/usr/include/AL/alc.h	/^ALC_API void       ALC_APIENTRY alcCaptureSamples(ALCdevice *device, ALCvoid *buffer, ALCsizei samples);$/;"	p	language:C++
alcCaptureStart	/usr/include/AL/alc.h	/^ALC_API void       ALC_APIENTRY alcCaptureStart(ALCdevice *device);$/;"	p	language:C++
alcCaptureStop	/usr/include/AL/alc.h	/^ALC_API void       ALC_APIENTRY alcCaptureStop(ALCdevice *device);$/;"	p	language:C++
alcCloseDevice	/usr/include/AL/alc.h	/^ALC_API ALCboolean ALC_APIENTRY alcCloseDevice(ALCdevice *device);$/;"	p	language:C++
alcCreateContext	/usr/include/AL/alc.h	/^ALC_API ALCcontext* ALC_APIENTRY alcCreateContext(ALCdevice *device, const ALCint* attrlist);$/;"	p	language:C++
alcDestroyContext	/usr/include/AL/alc.h	/^ALC_API void        ALC_APIENTRY alcDestroyContext(ALCcontext *context);$/;"	p	language:C++
alcGetContextsDevice	/usr/include/AL/alc.h	/^ALC_API ALCdevice*  ALC_APIENTRY alcGetContextsDevice(ALCcontext *context);$/;"	p	language:C++
alcGetCurrentContext	/usr/include/AL/alc.h	/^ALC_API ALCcontext* ALC_APIENTRY alcGetCurrentContext(void);$/;"	p	language:C++
alcGetEnumValue	/usr/include/AL/alc.h	/^ALC_API ALCenum    ALC_APIENTRY alcGetEnumValue(ALCdevice *device, const ALCchar *enumname);$/;"	p	language:C++
alcGetError	/usr/include/AL/alc.h	/^ALC_API ALCenum ALC_APIENTRY alcGetError(ALCdevice *device);$/;"	p	language:C++
alcGetIntegerv	/usr/include/AL/alc.h	/^ALC_API void           ALC_APIENTRY alcGetIntegerv(ALCdevice *device, ALCenum param, ALCsizei size, ALCint *values);$/;"	p	language:C++
alcGetProcAddress	/usr/include/AL/alc.h	/^ALC_API void*      ALC_APIENTRY alcGetProcAddress(ALCdevice *device, const ALCchar *funcname);$/;"	p	language:C++
alcGetString	/usr/include/AL/alc.h	/^ALC_API const ALCchar* ALC_APIENTRY alcGetString(ALCdevice *device, ALCenum param);$/;"	p	language:C++
alcGetThreadContext	/usr/include/AL/alext.h	/^ALC_API ALCcontext* ALC_APIENTRY alcGetThreadContext(void);$/;"	p	language:C++
alcIsExtensionPresent	/usr/include/AL/alc.h	/^ALC_API ALCboolean ALC_APIENTRY alcIsExtensionPresent(ALCdevice *device, const ALCchar *extname);$/;"	p	language:C++
alcIsRenderFormatSupportedSOFT	/usr/include/AL/alext.h	/^ALC_API ALCboolean ALC_APIENTRY alcIsRenderFormatSupportedSOFT(ALCdevice *device, ALCsizei freq, ALCenum channels, ALCenum type);$/;"	p	language:C++
alcLoopbackOpenDeviceSOFT	/usr/include/AL/alext.h	/^ALC_API ALCdevice* ALC_APIENTRY alcLoopbackOpenDeviceSOFT(const ALCchar *deviceName);$/;"	p	language:C++
alcMakeContextCurrent	/usr/include/AL/alc.h	/^ALC_API ALCboolean  ALC_APIENTRY alcMakeContextCurrent(ALCcontext *context);$/;"	p	language:C++
alcOpenDevice	/usr/include/AL/alc.h	/^ALC_API ALCdevice* ALC_APIENTRY alcOpenDevice(const ALCchar *devicename);$/;"	p	language:C++
alcProcessContext	/usr/include/AL/alc.h	/^ALC_API void        ALC_APIENTRY alcProcessContext(ALCcontext *context);$/;"	p	language:C++
alcRenderSamplesSOFT	/usr/include/AL/alext.h	/^ALC_API void ALC_APIENTRY alcRenderSamplesSOFT(ALCdevice *device, ALCvoid *buffer, ALCsizei samples);$/;"	p	language:C++
alcSetThreadContext	/usr/include/AL/alext.h	/^ALC_API ALCboolean  ALC_APIENTRY alcSetThreadContext(ALCcontext *context);$/;"	p	language:C++
alcSuspendContext	/usr/include/AL/alc.h	/^ALC_API void        ALC_APIENTRY alcSuspendContext(ALCcontext *context);$/;"	p	language:C++
alutCreateBufferFromFile	/usr/include/AL/alut.h	/^ALUT_API ALuint ALUT_APIENTRY alutCreateBufferFromFile (const char *fileName);$/;"	p	language:C++
alutCreateBufferFromFileImage	/usr/include/AL/alut.h	/^ALUT_API ALuint ALUT_APIENTRY alutCreateBufferFromFileImage (const ALvoid *data, ALsizei length);$/;"	p	language:C++
alutCreateBufferHelloWorld	/usr/include/AL/alut.h	/^ALUT_API ALuint ALUT_APIENTRY alutCreateBufferHelloWorld (void);$/;"	p	language:C++
alutCreateBufferWaveform	/usr/include/AL/alut.h	/^ALUT_API ALuint ALUT_APIENTRY alutCreateBufferWaveform (ALenum waveshape, ALfloat frequency, ALfloat phase, ALfloat duration);$/;"	p	language:C++
alutExit	/usr/include/AL/alut.h	/^ALUT_API ALboolean ALUT_APIENTRY alutExit (void);$/;"	p	language:C++
alutGetError	/usr/include/AL/alut.h	/^ALUT_API ALenum ALUT_APIENTRY alutGetError (void);$/;"	p	language:C++
alutGetErrorString	/usr/include/AL/alut.h	/^ALUT_API const char *ALUT_APIENTRY alutGetErrorString (ALenum error);$/;"	p	language:C++
alutGetMIMETypes	/usr/include/AL/alut.h	/^ALUT_API const char *ALUT_APIENTRY alutGetMIMETypes (ALenum loader);$/;"	p	language:C++
alutGetMajorVersion	/usr/include/AL/alut.h	/^ALUT_API ALint ALUT_APIENTRY alutGetMajorVersion (void);$/;"	p	language:C++
alutGetMinorVersion	/usr/include/AL/alut.h	/^ALUT_API ALint ALUT_APIENTRY alutGetMinorVersion (void);$/;"	p	language:C++
alutInit	/usr/include/AL/alut.h	/^ALUT_API ALboolean ALUT_APIENTRY alutInit (int *argcp, char **argv);$/;"	p	language:C++
alutInitWithoutContext	/usr/include/AL/alut.h	/^ALUT_API ALboolean ALUT_APIENTRY alutInitWithoutContext (int *argcp, char **argv);$/;"	p	language:C++
alutLoadMemoryFromFile	/usr/include/AL/alut.h	/^ALUT_API ALvoid *ALUT_APIENTRY alutLoadMemoryFromFile (const char *fileName, ALenum *format, ALsizei *size, ALfloat *frequency);$/;"	p	language:C++
alutLoadMemoryFromFileImage	/usr/include/AL/alut.h	/^ALUT_API ALvoid *ALUT_APIENTRY alutLoadMemoryFromFileImage (const ALvoid *data, ALsizei length, ALenum *format, ALsizei *size, ALfloat *frequency);$/;"	p	language:C++
alutLoadMemoryHelloWorld	/usr/include/AL/alut.h	/^ALUT_API ALvoid *ALUT_APIENTRY alutLoadMemoryHelloWorld (ALenum *format, ALsizei *size, ALfloat *frequency);$/;"	p	language:C++
alutLoadMemoryWaveform	/usr/include/AL/alut.h	/^ALUT_API ALvoid *ALUT_APIENTRY alutLoadMemoryWaveform (ALenum waveshape, ALfloat frequency, ALfloat phase, ALfloat duration, ALenum *format, ALsizei *size, ALfloat *freq);$/;"	p	language:C++
alutLoadWAVFile	/usr/include/AL/alut.h	/^ALUT_API ALUT_ATTRIBUTE_DEPRECATED void ALUT_APIENTRY alutLoadWAVFile (ALbyte *fileName, ALenum *format, void **data, ALsizei *size, ALsizei *frequency);$/;"	p	language:C++
alutLoadWAVFile	/usr/include/AL/alut.h	/^ALUT_API ALUT_ATTRIBUTE_DEPRECATED void ALUT_APIENTRY alutLoadWAVFile (ALbyte *fileName, ALenum *format, void **data, ALsizei *size, ALsizei *frequency, ALboolean *loop);$/;"	p	language:C++
alutLoadWAVMemory	/usr/include/AL/alut.h	/^ALUT_API ALUT_ATTRIBUTE_DEPRECATED void ALUT_APIENTRY alutLoadWAVMemory (ALbyte *buffer, ALenum *format, void **data, ALsizei *size, ALsizei *frequency);$/;"	p	language:C++
alutLoadWAVMemory	/usr/include/AL/alut.h	/^ALUT_API ALUT_ATTRIBUTE_DEPRECATED void ALUT_APIENTRY alutLoadWAVMemory (ALbyte *buffer, ALenum *format, void **data, ALsizei *size, ALsizei *frequency, ALboolean *loop);$/;"	p	language:C++
alutSleep	/usr/include/AL/alut.h	/^ALUT_API ALboolean ALUT_APIENTRY alutSleep (ALfloat duration);$/;"	p	language:C++
alutUnloadWAV	/usr/include/AL/alut.h	/^ALUT_API ALUT_ATTRIBUTE_DEPRECATED void ALUT_APIENTRY alutUnloadWAV (ALenum format, ALvoid *data, ALsizei size, ALsizei frequency);$/;"	p	language:C++
flAirAbsorptionGainHF	/usr/include/AL/efx-presets.h	/^    float flAirAbsorptionGainHF;$/;"	m	language:C++	struct:__anon1
flDecayHFRatio	/usr/include/AL/efx-presets.h	/^    float flDecayHFRatio;$/;"	m	language:C++	struct:__anon1
flDecayLFRatio	/usr/include/AL/efx-presets.h	/^    float flDecayLFRatio;$/;"	m	language:C++	struct:__anon1
flDecayTime	/usr/include/AL/efx-presets.h	/^    float flDecayTime;$/;"	m	language:C++	struct:__anon1
flDensity	/usr/include/AL/efx-presets.h	/^    float flDensity;$/;"	m	language:C++	struct:__anon1
flDiffusion	/usr/include/AL/efx-presets.h	/^    float flDiffusion;$/;"	m	language:C++	struct:__anon1
flEchoDepth	/usr/include/AL/efx-presets.h	/^    float flEchoDepth;$/;"	m	language:C++	struct:__anon1
flEchoTime	/usr/include/AL/efx-presets.h	/^    float flEchoTime;$/;"	m	language:C++	struct:__anon1
flGain	/usr/include/AL/efx-presets.h	/^    float flGain;$/;"	m	language:C++	struct:__anon1
flGainHF	/usr/include/AL/efx-presets.h	/^    float flGainHF;$/;"	m	language:C++	struct:__anon1
flGainLF	/usr/include/AL/efx-presets.h	/^    float flGainLF;$/;"	m	language:C++	struct:__anon1
flHFReference	/usr/include/AL/efx-presets.h	/^    float flHFReference;$/;"	m	language:C++	struct:__anon1
flLFReference	/usr/include/AL/efx-presets.h	/^    float flLFReference;$/;"	m	language:C++	struct:__anon1
flLateReverbDelay	/usr/include/AL/efx-presets.h	/^    float flLateReverbDelay;$/;"	m	language:C++	struct:__anon1
flLateReverbGain	/usr/include/AL/efx-presets.h	/^    float flLateReverbGain;$/;"	m	language:C++	struct:__anon1
flLateReverbPan	/usr/include/AL/efx-presets.h	/^    float flLateReverbPan[3];$/;"	m	language:C++	struct:__anon1
flModulationDepth	/usr/include/AL/efx-presets.h	/^    float flModulationDepth;$/;"	m	language:C++	struct:__anon1
flModulationTime	/usr/include/AL/efx-presets.h	/^    float flModulationTime;$/;"	m	language:C++	struct:__anon1
flReflectionsDelay	/usr/include/AL/efx-presets.h	/^    float flReflectionsDelay;$/;"	m	language:C++	struct:__anon1
flReflectionsGain	/usr/include/AL/efx-presets.h	/^    float flReflectionsGain;$/;"	m	language:C++	struct:__anon1
flReflectionsPan	/usr/include/AL/efx-presets.h	/^    float flReflectionsPan[3];$/;"	m	language:C++	struct:__anon1
flRoomRolloffFactor	/usr/include/AL/efx-presets.h	/^    float flRoomRolloffFactor;$/;"	m	language:C++	struct:__anon1
iDecayHFLimit	/usr/include/AL/efx-presets.h	/^    int   iDecayHFLimit;$/;"	m	language:C++	struct:__anon1
int64_t	/usr/include/AL/alext.h	/^typedef __int64 int64_t;$/;"	t	language:C++
uint64_t	/usr/include/AL/alext.h	/^typedef unsigned __int64 uint64_t;$/;"	t	language:C++
